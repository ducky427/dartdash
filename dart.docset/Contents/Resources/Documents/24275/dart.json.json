{"dependencies":[{"uri":"sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"uri":"sdk/lib/core/errors.dart","name":"Error","id":"Error","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nSafely convert a value to a [String] description.\n\nThe conversion is guaranteed to not throw, so it won't use the object's\ntoString method.\n","name":"safeToString","id":"safeToString1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"object","id":"object","kind":"param"}],"line":"16","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_objectToString","isPrivate":true,"id":"_objectToString1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"object","id":"object","kind":"param"}],"line":"34","kind":"method"},{"name":"Error","id":"Error0()","line":"8","kind":"constructor"}],"line":"7","kind":"class"}],"line":"5","kind":"library"}],"uri":"sdk/lib/json/json.dart","name":"dart:json","id":"dart.json","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSerializes [object] into [output] stream.\n\nPerforms the same operations as [stringify] but outputs the resulting\nstring to an existing [StringBuffer] instead of creating a new [String].\n\nIf serialization fails by throwing, some data might have been added to\n[output], but it won't contain valid JSON text.\n","name":"printOn","id":"printOn2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"object","id":"object","kind":"param"},{"ref":{"refId":"dart.core/StringBuffer","name":"StringBuffer"},"name":"output","id":"output","kind":"param"}],"line":"118","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nSerializes [object] into a JSON string.\n\nDirectly serializable values are [num], [String], [bool], and [Null], as well\nas some [List] and [Map] values.\nFor [List], the elements must all be serializable.\nFor [Map], the keys must be [String] and the values must be serializable.\n\nIf a value is any other type is attempted serialized, a \"toJson()\" method\nis invoked on the object and the result, which must be a directly\nserializable value, is serialized instead of the original value.\n\nIf the object does not support this method, throws, or returns a\nvalue that is not directly serializable, a [JsonUnsupportedObjectError]\nexception is thrown. If the call throws (including the case where there\nis no nullary \"toJson\" method, the error is caught and stored in the\n[JsonUnsupportedObjectError]'s [:cause:] field.\n\nIf a [List] or [Map] contains a reference to itself, directly or through\nother lists or maps, it cannot be serialized and a [JsonCyclicError] is\nthrown.\n\nJson Objects should not change during serialization.\nIf an object is serialized more than once, [stringify] is allowed to cache\nthe JSON text for it. I.e., if an object changes after it is first\nserialized, the new values may or may not be reflected in the result.\n","name":"stringify","id":"stringify1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"object","id":"object","kind":"param"}],"line":"105","kind":"method"},{"name":"_parse","isPrivate":true,"id":"_parse2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"json","id":"json","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"reviver","id":"reviver","children":[{"uri":"sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"sdk/lib/json/json.dart","name":"key","id":"key","line":"67","kind":"param"},{"uri":"sdk/lib/json/json.dart","name":"value","id":"value","line":"67","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"67","kind":"method"},{"comment":"\nParses [json] and build the corresponding parsed JSON value.\n\nParsed JSON values are of the types [num], [String], [bool], [Null],\n[List]s of parsed JSON values or [Map]s from [String] to parsed\nJSON values.\n\nThe optional [revivier] function, if provided, is called once for each\nobject or list property parsed. The arguments are the property name\n([String]) or list index ([int]), and the value is the parsed value.\nThe return value of the revivier will be used as the value of that property\ninstead the parsed value.\n\nThrows [FormatException] if the input is not valid JSON text.\n","name":"parse","id":"parse2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"json","id":"json","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"reviver","id":"reviver","children":[{"uri":"sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"sdk/lib/json/json.dart","name":"key","id":"key","line":"65","kind":"param"},{"uri":"sdk/lib/json/json.dart","name":"value","id":"value","line":"65","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"65","kind":"method"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"name":"_JsonStringifier","isPrivate":true,"id":"_JsonStringifier","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"stringify","id":"stringify1()","children":[{"name":"object","id":"object","kind":"param"}],"line":"671","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"printOn","id":"printOn2()","children":[{"name":"object","id":"object","kind":"param"},{"ref":{"refId":"dart.core/StringBuffer","name":"StringBuffer"},"name":"output","id":"output","kind":"param"}],"line":"678","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"numberToString","id":"numberToString1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"683","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"hexDigit","id":"hexDigit1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"x","id":"x","kind":"param"}],"line":"688","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"escape","id":"escape2()","children":[{"ref":{"refId":"dart.core/StringBuffer","name":"StringBuffer"},"name":"sb","id":"sb","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"s","id":"s","kind":"param"}],"line":"690","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"checkCycle","id":"checkCycle1()","children":[{"name":"object","id":"object","kind":"param"}],"line":"735","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"stringifyValue","id":"stringifyValue1()","children":[{"name":"object","id":"object","kind":"param"}],"line":"745","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nSerializes a [num], [String], [bool], [Null], [List] or [Map] value.\n\nReturns true if the value is one of these types, and false if not.\nIf a value is both a [List] and a [Map], it's serialized as a [List].\n","name":"stringifyJsonValue","id":"stringifyJsonValue1()","children":[{"name":"object","id":"object","kind":"param"}],"line":"769","kind":"method"},{"ref":{"refId":"dart.core/StringBuffer","name":"StringBuffer"},"name":"sb","id":"sb","line":"666","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Object","name":"Object"}],"name":"List"},"name":"seen","id":"seen","line":"667","kind":"variable"},{"name":"_JsonStringifier","id":"_JsonStringifier1()","children":[{"initializedField":{"refId":"dart.json/_JsonStringifier/sb","name":"sb"},"ref":{"refId":"dart.core/StringBuffer","name":"StringBuffer"},"name":"sb","id":"sb","kind":"param"}],"line":"669","kind":"constructor"}],"line":"665","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"name":"JsonParser","id":"JsonParser","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Parses [source], or throws if it fails. ","name":"parse","id":"parse0()","line":"342","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nParses a \"true\" literal starting at [position].\n\n[:source[position]:] must be \"t\".\n","name":"parseTrue","id":"parseTrue1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"}],"line":"448","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nParses a \"false\" literal starting at [position].\n\n[:source[position]:] must be \"f\".\n","name":"parseFalse","id":"parseFalse1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"}],"line":"465","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"Parses a \"null\" literal starting at [position].\n\n[:source[position]:] must be \"n\".\n","name":"parseNull","id":"parseNull1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"}],"line":"482","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"parseString","id":"parseString1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"}],"line":"494","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"_handleLiteral","isPrivate":true,"id":"_handleLiteral3()","children":[{"name":"start","id":"start","kind":"param"},{"name":"position","id":"position","kind":"param"},{"name":"isDouble","id":"isDouble","kind":"param"}],"line":"579","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"parseNumber","id":"parseNumber2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"char","id":"char","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"}],"line":"587","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"fail","id":"fail2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"message","id":"message","kind":"param"}],"line":"649","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"INSIDE_ARRAY","id":"INSIDE_ARRAY","line":"272","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"INSIDE_OBJECT","id":"INSIDE_OBJECT","line":"273","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"AFTER_COLON","id":"AFTER_COLON","line":"274","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"ALLOW_STRING_MASK","id":"ALLOW_STRING_MASK","line":"276","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"ALLOW_VALUE_MASK","id":"ALLOW_VALUE_MASK","line":"277","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"ALLOW_VALUE","id":"ALLOW_VALUE","line":"278","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STRING_ONLY","id":"STRING_ONLY","line":"279","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NO_VALUES","id":"NO_VALUES","line":"280","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"EMPTY","id":"EMPTY","line":"283","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NON_EMPTY","id":"NON_EMPTY","line":"284","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"EMPTY_MASK","id":"EMPTY_MASK","line":"285","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"VALUE_READ_BITS","id":"VALUE_READ_BITS","line":"288","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_INITIAL","id":"STATE_INITIAL","line":"291","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_END","id":"STATE_END","line":"292","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_ARRAY_EMPTY","id":"STATE_ARRAY_EMPTY","line":"294","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_ARRAY_VALUE","id":"STATE_ARRAY_VALUE","line":"295","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_ARRAY_COMMA","id":"STATE_ARRAY_COMMA","line":"296","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_OBJECT_EMPTY","id":"STATE_OBJECT_EMPTY","line":"298","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_OBJECT_KEY","id":"STATE_OBJECT_KEY","line":"299","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_OBJECT_COLON","id":"STATE_OBJECT_COLON","line":"300","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_OBJECT_VALUE","id":"STATE_OBJECT_VALUE","line":"301","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_OBJECT_COMMA","id":"STATE_OBJECT_COMMA","line":"302","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"BACKSPACE","id":"BACKSPACE","line":"305","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"TAB","id":"TAB","line":"306","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NEWLINE","id":"NEWLINE","line":"307","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CARRIAGE_RETURN","id":"CARRIAGE_RETURN","line":"308","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FORM_FEED","id":"FORM_FEED","line":"309","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SPACE","id":"SPACE","line":"310","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"QUOTE","id":"QUOTE","line":"311","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"PLUS","id":"PLUS","line":"312","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"COMMA","id":"COMMA","line":"313","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"MINUS","id":"MINUS","line":"314","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"DECIMALPOINT","id":"DECIMALPOINT","line":"315","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SLASH","id":"SLASH","line":"316","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_0","id":"CHAR_0","line":"317","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_9","id":"CHAR_9","line":"318","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"COLON","id":"COLON","line":"319","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_E","id":"CHAR_E","line":"320","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"LBRACKET","id":"LBRACKET","line":"321","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"BACKSLASH","id":"BACKSLASH","line":"322","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"RBRACKET","id":"RBRACKET","line":"323","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_a","id":"CHAR_a","line":"324","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_b","id":"CHAR_b","line":"325","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_e","id":"CHAR_e","line":"326","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_f","id":"CHAR_f","line":"327","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_l","id":"CHAR_l","line":"328","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_n","id":"CHAR_n","line":"329","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_r","id":"CHAR_r","line":"330","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_s","id":"CHAR_s","line":"331","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_t","id":"CHAR_t","line":"332","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHAR_u","id":"CHAR_u","line":"333","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"LBRACE","id":"LBRACE","line":"334","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"RBRACE","id":"RBRACE","line":"335","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"source","id":"source","line":"337","kind":"variable"},{"ref":{"refId":"dart.json/JsonListener","name":"JsonListener"},"isFinal":true,"name":"listener","id":"listener","line":"338","kind":"variable"},{"name":"JsonParser","id":"JsonParser2()","children":[{"initializedField":{"refId":"dart.json/JsonParser/source","name":"source"},"ref":{"refId":"dart.core/String","name":"String"},"name":"source","id":"source","kind":"param"},{"initializedField":{"refId":"dart.json/JsonParser/listener","name":"listener"},"ref":{"refId":"dart.json/JsonListener","name":"JsonListener"},"name":"listener","id":"listener","kind":"param"}],"line":"339","kind":"constructor"}],"line":"246","kind":"class"},{"superclass":{"refId":"dart.json/BuildJsonListener","name":"BuildJsonListener"},"name":"ReviverJsonListener","id":"ReviverJsonListener","children":[{"returnType":{"refId":"void","name":"void"},"name":"arrayElement","id":"arrayElement0()","line":"230","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"propertyValue","id":"propertyValue0()","line":"236","kind":"method"},{"name":"result","id":"result","line":"241","kind":"property"},{"ref":{"refId":"dart.json/_Reviver","name":"_Reviver"},"isFinal":true,"name":"reviver","id":"reviver","line":"227","kind":"variable"},{"name":"ReviverJsonListener","id":"ReviverJsonListener1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"reviver","id":"reviver","children":[{"uri":"sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"sdk/lib/json/json.dart","name":"key","id":"key","line":"228","kind":"param"},{"uri":"sdk/lib/json/json.dart","name":"value","id":"value","line":"228","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"228","kind":"constructor"}],"line":"226","kind":"class"},{"name":"_Reviver","isPrivate":true,"id":"_Reviver","children":[{"name":"key","id":"key","kind":"param"},{"name":"value","id":"value","kind":"param"}],"line":"224","kind":"typedef"},{"superclass":{"refId":"dart.json/JsonListener","name":"JsonListener"},"comment":"\nA [JsonListener] that builds data objects from the parser events.\n\nThis is a simple stack-based object builder. It keeps the most recently\nseen value in a variable, and uses it depending on the following event.\n","name":"BuildJsonListener","id":"BuildJsonListener","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Pushes the currently active container (and key, if a [Map]). ","name":"pushContainer","id":"pushContainer0()","line":"165","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Pops the top container from the [stack], including a key if applicable. ","name":"popContainer","id":"popContainer0()","line":"171","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleString","id":"handleString1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"177","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleNumber","id":"handleNumber1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"value","id":"value","kind":"param"}],"line":"178","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleBool","id":"handleBool1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"179","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleNull","id":"handleNull0()","line":"180","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"beginObject","id":"beginObject0()","line":"182","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"propertyName","id":"propertyName0()","line":"187","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"propertyValue","id":"propertyValue0()","line":"192","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"endObject","id":"endObject0()","line":"198","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"beginArray","id":"beginArray0()","line":"202","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"arrayElement","id":"arrayElement0()","line":"207","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"endArray","id":"endArray0()","line":"213","kind":"method"},{"comment":"Read out the final result of parsing a JSON string. ","name":"result","id":"result","line":"218","kind":"property"},{"ref":{"refId":"dart.core/List","name":"List"},"comment":"\nStack used to handle nested containers.\n\nThe current container is pushed on the stack when a new one is\nstarted. If the container is a [Map], there is also a current [key]\nwhich is also stored on the stack.\n","name":"stack","id":"stack","line":"156","kind":"variable"},{"comment":"The current [Map] or [List] being built. ","name":"currentContainer","id":"currentContainer","line":"158","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"The most recently read property key. ","name":"key","id":"key","line":"160","kind":"variable"},{"comment":"The most recently read value. ","name":"value","id":"value","line":"162","kind":"variable"}],"line":"148","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"/ Implementation ///////////////////////////////////////////////////////////","name":"JsonListener","id":"JsonListener","children":[{"returnType":{"refId":"void","name":"void"},"name":"handleString","id":"handleString1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"127","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleNumber","id":"handleNumber1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"value","id":"value","kind":"param"}],"line":"128","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleBool","id":"handleBool1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"129","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleNull","id":"handleNull0()","line":"130","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"beginObject","id":"beginObject0()","line":"131","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"propertyName","id":"propertyName0()","line":"132","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"propertyValue","id":"propertyValue0()","line":"133","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"endObject","id":"endObject0()","line":"134","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"beginArray","id":"beginArray0()","line":"135","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"arrayElement","id":"arrayElement0()","line":"136","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"endArray","id":"endArray0()","line":"137","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Called on failure to parse [source]. ","name":"fail","id":"fail3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"position","id":"position","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"message","id":"message","kind":"param"}],"line":"139","kind":"method"}],"line":"126","kind":"class"},{"superclass":{"refId":"dart.json/JsonUnsupportedObjectError","name":"JsonUnsupportedObjectError"},"isThrowable":true,"comment":"\nReports that an object could not be stringified due to cyclic references.\n\nAn object that references itself cannot be serialized by [stringify].\nWhen the cycle is detected, a [JsonCyclicError] is thrown.\n","name":"JsonCyclicError","id":"JsonCyclicError","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"46","kind":"method"},{"comment":"The first object that was detected as part of a cycle. ","name":"JsonCyclicError","id":"JsonCyclicError1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"object","id":"object","kind":"param"}],"line":"45","kind":"constructor"}],"line":"43","kind":"class"},{"interfaces":[{"refId":"dart.core/Error","name":"Error"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"comment":"\nError thrown by JSON serialization if an object cannot be serialized.\n\nThe [unsupportedObject] field holds that object that failed to be serialized.\n\nIf an object isn't directly serializable, the serializer calls the 'toJson'\nmethod on the object. If that call fails, the error will be stored in the\n[cause] field. If the call returns an object that isn't directly\nserializable, the [cause] will be null.\n","name":"JsonUnsupportedObjectError","id":"JsonUnsupportedObjectError","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"27","kind":"method"},{"isFinal":true,"comment":"The object that could not be serialized. ","name":"unsupportedObject","id":"unsupportedObject","line":"21","kind":"variable"},{"isFinal":true,"comment":"The exception thrown by object's [:toJson:] method, if any. ","name":"cause","id":"cause","line":"23","kind":"variable"},{"name":"JsonUnsupportedObjectError","id":"JsonUnsupportedObjectError2()","children":[{"initializedField":{"refId":"dart.json/JsonUnsupportedObjectError/unsupportedObject","name":"unsupportedObject"},"name":"unsupportedObject","id":"unsupportedObject","kind":"param"},{"initializedField":{"refId":"dart.json/JsonUnsupportedObjectError/cause","name":"cause"},"isNamed":true,"isOptional":true,"name":"cause","id":"cause","kind":"param"}],"line":"25","kind":"constructor"}],"line":"19","kind":"class"}],"line":"5","kind":"library"}