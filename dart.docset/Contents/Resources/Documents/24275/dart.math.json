{"dependencies":[{"uri":"sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"uri":"sdk/lib/math/math.dart","name":"dart:math","id":"dart.math","children":[{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nConverts [x] to a double and returns the natural logarithm of the value.\nReturns negative infinity if [x] is equal to zero.\nReturns NaN if [x] is NaN or less than zero.\n","name":"log","id":"log1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"223","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nConverts [x] to a double and returns the natural exponent, [E],\nto the power [x].\nReturns NaN if [x] is NaN.\n","name":"exp","id":"exp1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"216","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nConverts [x] to a double and returns the positive square root of the value.\n\nReturns -0.0 if [x] is -0.0, and NaN if [x] is otherwise negative or NaN.\n","name":"sqrt","id":"sqrt1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"209","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nConverts [x] to a dobule and returns the arc tangent of the vlaue.\nReturns a value in the range -PI/2..PI/2, or NaN if [x] is NaN.\n","name":"atan","id":"atan1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"202","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nConverts [x] to a double and returns the arc sine of the value.\nReturns a value in the range -PI..PI, or  NaN if [x] is outside\nthe range -1..1.\n","name":"asin","id":"asin1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"196","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nConverts [x] to a double and returns the arc cosine of the value.\n\nReturns a value in the range -PI..PI, or NaN if [x] is outside\nthe range -1..1.\n","name":"acos","id":"acos1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"189","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nConverts [x] to a double and returns the tangent of the value.\n\nThe tangent function is equivalent to [:sin(x)/cos(x):] and may be\ninfinite (positive or negative) when [:cos(x):] is equal to zero.\nIf [x] is not a finite number, the result is NaN.\n","name":"tan","id":"tan1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"181","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nConverts [x] to a double and returns the cosine of the value.\n\nIf [x] is not a finite number, the result is NaN.\n","name":"cos","id":"cos1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"172","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nConverts [x] to a double and returns the sine of the value.\n\nIf [x] is not a finite number, the result is NaN.\n","name":"sin","id":"sin1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"}],"line":"165","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"\nReturns [x] to the power of [exponent].\n\nIf [x] is an [int] and [exponent] is a non-negative [int], the result is\nan [int], otherwise the result it is a [double].\n\nNotice that an [int] result cannot overflow, but a [double] result might\nbe [double.INFINITY].\n","name":"pow","id":"pow2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"exponent","id":"exponent","kind":"param"}],"line":"158","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nA variant of [atan].\n\nConverts both arguments to doubles.\n\nReturns the angle between the positive x-axis and the vector ([b],[a]).\nThe result, in radians, is in the range -PI..PI.\n\nIf [b] is positive, this is the same as [:atan(b/a):].\n\nThe result is negative when [a] is negative (including when [a] is the\ndouble -0.0).\n\nIf [a] is equal to zero, the vector ([b],[a]) is considered parallel to\nthe x-axis, even if [b] is also equal to zero. The sign of [b] determines\nthe direction of the vector along the x-axis.\n\nReturns NaN if either argument is NaN.\n","name":"atan2","id":"atan22()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"a","id":"a","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"b","id":"b","kind":"param"}],"line":"147","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"\nReturns the larger of two numbers.\n\nReturns NaN if either argument is NaN.\nThe larger of [:-0.0:] and [:0.0:] is [:0.0:]. If the arguments are\notherwise equal (including int and doubles with the same mathematical value)\nthen it is unspecified which of the two arguments is returned.\n","name":"max","id":"max2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"a","id":"a","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"b","id":"b","kind":"param"}],"line":"97","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"\nReturns the lesser of two numbers.\n\nReturns NaN if either argument is NaN.\nThe lesser of [:-0.0:] and [:0.0:] is [:-0.0:].\nIf the arguments are otherwise equal (including int and doubles with the\nsame mathematical value) then it is unspecified which of the two arguments\nis returned.\n","name":"min","id":"min2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"a","id":"a","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"b","id":"b","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/double","name":"double"},"comment":"\nSquare root of 2.\n","name":"SQRT2","id":"SQRT2","line":"49","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"comment":"\nSquare root of 1/2.\n","name":"SQRT1_2","id":"SQRT1_2","line":"44","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"comment":"\nThe PI constant.\n","name":"PI","id":"PI","line":"39","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"comment":"\nBase-10 logarithm of [E].\n","name":"LOG10E","id":"LOG10E","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"comment":"\nBase-2 logarithm of [E].\n","name":"LOG2E","id":"LOG2E","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"comment":"\nNatural logarithm of 2.\n","name":"LN2","id":"LN2","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"comment":"\nNatural logarithm of 10.\n","name":"LN10","id":"LN10","line":"19","kind":"variable"},{"ref":{"refId":"dart.core/double","name":"double"},"comment":"\nBase of the natural logarithms.\n\nTypically written as \"e\".\n","name":"E","id":"E","line":"14","kind":"variable"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA random number generator. The default implementation supplies a stream of\npseudo-random bits which is not suitable for cryptographic purposes.\n","uri":"sdk/lib/math/random.dart","name":"Random","id":"Random","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGenerates a positive random integer uniformly distributed on the range\nfrom 0, inclusive, to [max], exclusive.\n\nImplementation note: The default implementation supports [max] values\nbetween 1 and ((1<<32) - 1) inclusive.\n","name":"nextInt","id":"nextInt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"max","id":"max","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"dart.core/double","name":"double"},"comment":"\nGenerates a positive random floating point value uniformly distributed on\nthe range from 0.0, inclusive, to 1.0, exclusive.\n","name":"nextDouble","id":"nextDouble0()","line":"34","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGenerates a random boolean value.\n","name":"nextBool","id":"nextBool0()","line":"39","kind":"method"},{"returnType":{"refId":"dart.math/Random","name":"Random"},"comment":"\nCreates a random-number generator. The optional parameter [seed] is used\nto initialize the internal state of the generator. The implementation of\nthe random stream can change between releases of the library.\n\nImplementation note: The default implementation uses up to 64-bits of seed.\n","name":"Random","id":"Random1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"seed","id":"seed","kind":"param"}],"line":"19","kind":"constructor"}],"line":"11","kind":"class"}],"line":"5","kind":"library"}