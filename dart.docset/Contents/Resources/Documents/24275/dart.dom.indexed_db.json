{"dependencies":[{"uri":"sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"},{"uri":"sdk/lib/_internal/lib/interceptors.dart","name":"dart:_interceptors","id":"_interceptors","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe base interceptor class.\n\nThe code `r.foo(a)` is compiled to `getInterceptor(r).foo$1(r, a)`.  The\nvalue returned by [getInterceptor] holds the methods separately from the\nstate of the instance.  The compiler converts the methods on an interceptor\nto take the Dart `this` argument as an explicit `receiver` argument.  The\nJavaScript `this` parameter is bound to the interceptor.\n\nIn order to have uniform call sites, if a method is defined on an\ninterceptor, methods of that name on plain unintercepted classes also use the\ninterceptor calling convention.  The plain classes are _self-interceptors_,\nand for them, `getInterceptor(r)` returns `r`.  Methods on plain\nunintercepted classes have a redundant `receiver` argument and should ignore\nit in favour of `this`.\n\nIn the case of mixins, a method may be placed on both an intercepted class\nand an unintercepted class.  In this case, the method must use the `receiver`\nparameter.\n\n\nThere are various optimizations of the general call pattern.\n\nWhen the interceptor can be statically determined, it can be used directly:\n\n    CONSTANT_INTERCEPTOR.foo$1(r, a)\n\nIf there are only a few classes, [getInterceptor] can be specialized with a\nmore efficient dispatch:\n\n    getInterceptor$specialized(r).foo$1(r, a)\n\nIf it can be determined that the receiver is an unintercepted class, it can\nbe called directly:\n\n    r.foo$1(r, a)\n\nIf, further, it is known that the call site cannot call a foo that is\nmixed-in to a native class, then it is known that the explicit receiver is\nignored, and space-saving dummy value can be passed instead:\n\n    r.foo$1(0, a)\n\nThis class defines implementations of *all* methods on [Object] so no\ninterceptor inherits an implementation from [Object].  This enables the\nimplementations on Object to ignore the explicit receiver argument, which\nallows dummy receiver optimization.\n","name":"Interceptor","id":"Interceptor","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"300","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"304","kind":"method"},{"name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"306","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"hashCode","id":"hashCode","line":"302","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"runtimeType","id":"runtimeType","line":"314","kind":"property"},{"name":"Interceptor","id":"Interceptor0()","line":"298","kind":"constructor"}],"line":"297","kind":"class"}],"line":"5","kind":"library"},{"comment":"The Dart HTML library.","uri":"sdk/lib/html/dart2js/html_dart2js.dart","name":"dart:html","id":"dart.dom.html","children":[{"superclass":{"refId":"_interceptors/Interceptor","name":"Interceptor"},"mdnCommentHtml":"An <code>EventTarget</code> is a DOM interface implemented by objects that can receive DOM events and have listeners for them. The most common <code>EventTarget</code>s are <a rel=\"internal\" href=\"https://developer.mozilla.org/en/DOM/element\" title=\"en/DOM/element\">DOM elements</a>, although other objects can be <code>EventTarget</code>s too, for example <a rel=\"internal\" href=\"https://developer.mozilla.org/en/DOM/document\" title=\"en/DOM/document\">document</a>, <a rel=\"internal\" href=\"https://developer.mozilla.org/en/DOM/window\" title=\"en/DOM/window\">window</a>, <a rel=\"internal\" href=\"https://developer.mozilla.org/en/XMLHttpRequest\" title=\"en/XMLHttpRequest\">XMLHttpRequest</a>, and others.\n","comment":"\nBase class for all browser objects that support events.\n\nUse the [on] property to add, and remove events (rather than\n[$dom_addEventListener] and [$dom_removeEventListener]\nfor compile-time type checks and a more concise API.\n","name":"EventTarget","id":"EventTarget","children":[{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"\nRegister an event handler of a specific event type on the <code>EventTarget</code>.","name":"$dom_addEventListener","id":"$dom_addEventListener3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","line":"10153","kind":"param"},{"ref":{"refId":"dart.dom.html/EventListener","name":"EventListener"},"name":"listener","id":"listener","line":"10153","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"useCapture","id":"useCapture","line":"10153","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/DOM/EventTarget","line":"10150","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"mdnCommentHtml":"\nDispatch an event to this <code>EventTarget</code>.","name":"dispatchEvent","id":"dispatchEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"event","id":"event","line":"10157","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/DOM/EventTarget","line":"10155","kind":"method"},{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"\nRemoves an event listener from the <code>EventTarget</code>.","name":"$dom_removeEventListener","id":"$dom_removeEventListener3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","line":"10162","kind":"param"},{"ref":{"refId":"dart.dom.html/EventListener","name":"EventListener"},"name":"listener","id":"listener","line":"10162","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"useCapture","id":"useCapture","line":"10162","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/DOM/EventTarget","line":"10159","kind":"method"},{"ref":{"refId":"dart.dom.html/Events","name":"Events"},"comment":"\nThis is an ease-of-use accessor for event streams which should only be\nused when an explicit accessor is not available.\n","name":"on","id":"on","line":"10148","kind":"property"}],"mdnUrl":"https://developer.mozilla.org/en/DOM/EventTarget","line":"10141","kind":"class"},{"superclass":{"refId":"_interceptors/Interceptor","name":"Interceptor"},"mdnCommentHtml":"<p>This chapter describes the DOM Event Model. The <a class=\"external\" rel=\"external\" href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event\" title=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event\" target=\"_blank\">Event</a> interface itself is described, as well as the interfaces for event registration on nodes in the DOM, and <a title=\"en/DOM/element.addEventListener\" rel=\"internal\" href=\"https://developer.mozilla.org/en/DOM/element.addEventListener\">event listeners</a>, and several longer examples that show how the various event interfaces relate to one another.</p>\n<p>There is an excellent diagram that clearly explains the three phases of event flow through the DOM in the <a class=\"external\" title=\"http://www.w3.org/TR/DOM-Level-3-Events/#dom-event-architecture\" rel=\"external\" href=\"http://www.w3.org/TR/DOM-Level-3-Events/#dom-event-architecture\" target=\"_blank\">DOM Level 3 Events draft</a>.</p>","name":"Event","id":"Event","children":[{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"Initializes the value of an Event created through the <code>DocumentEvent</code> interface.","name":"$dom_initEvent","id":"$dom_initEvent3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"eventTypeArg","id":"eventTypeArg","line":"9937","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"canBubbleArg","id":"canBubbleArg","line":"9937","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelableArg","id":"cancelableArg","line":"9937","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9934","kind":"method"},{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"Cancels the event (if it is cancelable).","name":"preventDefault","id":"preventDefault0()","mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9939","kind":"method"},{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"For this particular event, no other listener will be called. Neither those attached on the same element, nor those attached on elements which will be traversed later (in capture phase, for instance)","name":"stopImmediatePropagation","id":"stopImmediatePropagation0()","mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9943","kind":"method"},{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"Stops the propagation of events further along in the DOM.","name":"stopPropagation","id":"stopPropagation0()","mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9947","kind":"method"},{"ref":{"refId":"dart.dom.html/EventTarget","name":"EventTarget"},"name":"currentTarget","id":"currentTarget","line":"9894","kind":"property"},{"ref":{"refId":"dart.dom.html/EventTarget","name":"EventTarget"},"name":"target","id":"target","line":"9918","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"AT_TARGET","id":"AT_TARGET","line":"9759","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"BLUR","id":"BLUR","line":"9765","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"BUBBLING_PHASE","id":"BUBBLING_PHASE","line":"9769","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CAPTURING_PHASE","id":"CAPTURING_PHASE","line":"9773","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CHANGE","id":"CHANGE","line":"9779","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CLICK","id":"CLICK","line":"9785","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"DBLCLICK","id":"DBLCLICK","line":"9791","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"DRAGDROP","id":"DRAGDROP","line":"9797","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FOCUS","id":"FOCUS","line":"9803","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"KEYDOWN","id":"KEYDOWN","line":"9809","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"KEYPRESS","id":"KEYPRESS","line":"9815","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"KEYUP","id":"KEYUP","line":"9821","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"MOUSEDOWN","id":"MOUSEDOWN","line":"9827","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"MOUSEDRAG","id":"MOUSEDRAG","line":"9833","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"MOUSEMOVE","id":"MOUSEMOVE","line":"9839","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"MOUSEOUT","id":"MOUSEOUT","line":"9845","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"MOUSEOVER","id":"MOUSEOVER","line":"9851","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"MOUSEUP","id":"MOUSEUP","line":"9857","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NONE","id":"NONE","line":"9863","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SELECT","id":"SELECT","line":"9869","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"mdnCommentHtml":"A boolean indicating whether the event bubbles up through the DOM or not.","name":"bubbles","id":"bubbles","mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9873","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"mdnCommentHtml":"A boolean indicating whether the bubbling of the event has been canceled or not.","name":"cancelBubble","id":"cancelBubble","mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9879","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"mdnCommentHtml":"A boolean indicating whether the event is cancelable.","name":"cancelable","id":"cancelable","mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9883","kind":"variable"},{"ref":{"refId":"dart.dom.html/DataTransfer","name":"DataTransfer"},"isFinal":true,"name":"clipboardData","id":"clipboardData","line":"9892","kind":"variable"},{"isFinal":true,"name":"_get_currentTarget","isPrivate":true,"id":"_get_currentTarget","line":"9900","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"mdnCommentHtml":"Indicates whether or not <code><a rel=\"custom\" href=\"https://developer.mozilla.org/en/DOM/event.preventDefault\">event.preventDefault()</a></code>\n has been called on the event.","name":"defaultPrevented","id":"defaultPrevented","mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9904","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"mdnCommentHtml":"Indicates which phase of the event flow is being processed.","name":"eventPhase","id":"eventPhase","mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9908","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.dom.html/Node","name":"Node"}],"name":"List"},"isFinal":true,"name":"path","id":"path","line":"9916","kind":"variable"},{"isFinal":true,"name":"_get_target","isPrivate":true,"id":"_get_target","line":"9924","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"mdnCommentHtml":"The time that the event was created.","name":"timeStamp","id":"timeStamp","mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9928","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"mdnCommentHtml":"The name of the event (case-insensitive).","name":"type","id":"type","mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9932","kind":"variable"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"name":"Event","id":"Event3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"canBubble","id":"canBubble","line":"9737","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"cancelable","id":"cancelable","line":"9737","kind":"param"}],"line":"9736","kind":"constructor"},{"returnType":{"refId":"dart.dom.html/Event","name":"Event"},"comment":"\nCreates a new Event object of the specified type.\n\nThis is analogous to document.createEvent.\nNormally events should be created via their constructors, if available.\n\n    var e = new Event.type('MouseEvent', 'mousedown', true, true);\n","name":"Event.eventType","id":"Event.eventType4()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"canBubble","id":"canBubble","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"cancelable","id":"cancelable","line":"9751","kind":"param"}],"line":"9750","kind":"constructor"}],"mdnUrl":"https://developer.mozilla.org/en/DOM/event","line":"9728","kind":"class"}],"line":"2","kind":"library"}],"uri":"sdk/lib/indexed_db/dart2js/indexed_db_dart2js.dart","name":"dart:indexed_db","id":"dart.dom.indexed_db","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nTies a request to a completer, so the completer is completed when it succeeds\nand errors out when the request errors.\n","name":"_completeRequest","isPrivate":true,"id":"_completeRequest1()","children":[{"ref":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"name":"request","id":"request","kind":"param"}],"line":"483","kind":"method"},{"comment":"May modify original.  If so, action is idempotent.","name":"_convertNativeToDart_IDBAny","isPrivate":true,"id":"_convertNativeToDart_IDBAny1()","children":[{"name":"object","id":"object","kind":"param"}],"line":"127","kind":"method"},{"comment":"\nConverts a Dart object into a valid IDBKey.\n\nMay return the original input.  Does not mutate input.\n\nIf necessary, [dartKey] may be copied to ensure all lists are converted into\nJavaScript Arrays and Dart Dates into JavaScript Dates.\n","name":"_convertDartToNative_IDBKey","isPrivate":true,"id":"_convertDartToNative_IDBKey1()","children":[{"name":"dartKey","id":"dartKey","kind":"param"}],"line":"119","kind":"method"},{"comment":"\nConverts a native IDBKey into a Dart object.\n\nMay return the original input.  May mutate the original input (but will be\nidempotent if mutation occurs).  It is assumed that this conversion happens\non native IDBKeys on all paths that return IDBKeys from native DOM calls.\n\nIf necessary, JavaScript Dates are converted into Dart Dates.\n","name":"_convertNativeToDart_IDBKey","isPrivate":true,"id":"_convertNativeToDart_IDBKey1()","children":[{"name":"nativeKey","id":"nativeKey","kind":"param"}],"line":"94","kind":"method"},{"name":"_annotation_Returns_IDBKey","isPrivate":true,"id":"_annotation_Returns_IDBKey","line":"134","kind":"variable"},{"name":"_annotation_Creates_IDBKey","isPrivate":true,"id":"_annotation_Creates_IDBKey","line":"133","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_idbKey","isPrivate":true,"id":"_idbKey","line":"132","kind":"variable"},{"isAbstract":true,"superclass":{"refId":"_interceptors/Interceptor","name":"Interceptor"},"name":"_IDBAny","isPrivate":true,"id":"_IDBAny","line":"1277","kind":"class"},{"superclass":{"refId":"dart.dom.html/Event","name":"Event"},"mdnCommentHtml":"<p>The <code>IDBVersionChangeEvent</code> interface of the <a title=\"en/IndexedDB\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB\">IndexedDB&nbsp;API</a> indicates that the version of the database has changed.</p>\n<p>The specification has changed and some not up-to-date browsers only support the deprecated unique attribute, <code>version</code>, from an early draft version.</p>","name":"VersionChangeEvent","id":"VersionChangeEvent","children":[{"isFinal":true,"mdnCommentHtml":"Returns the new version of the database.","name":"newVersion","id":"newVersion","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeEvent","line":"1264","kind":"variable"},{"isFinal":true,"mdnCommentHtml":"Returns the old version of the database.","name":"oldVersion","id":"oldVersion","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeEvent","line":"1270","kind":"variable"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeEvent","line":"1255","kind":"class"},{"superclass":{"refId":"dart.dom.html/EventTarget","name":"EventTarget"},"mdnCommentHtml":"<p>The <code>IDBTransaction</code> interface of the <a title=\"en/IndexedDB\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB\">IndexedDB&nbsp;API</a> provides a static, asynchronous transaction on a database using event handler attributes. All reading and writing of data are done within transactions. You actually use <code><a title=\"en/IndexedDB/IDBDatabase\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabase\">IDBDatabase</a></code> to start transactions and use <code>IDBTransaction</code> to set the mode of the transaction and access an object store and make your request. You can also use it to abort transactions.</p>\n<p>Inherits from: <a title=\"en/DOM/EventTarget\" rel=\"internal\" href=\"https://developer.mozilla.org/en/DOM/EventTarget\">EventTarget</a></p>","name":"Transaction","id":"Transaction","children":[{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"<p>Returns immediately, and undoes all the changes to objects in the database associated with this transaction. If this transaction has been aborted or completed, then this method throws an <a title=\"en/IndexedDB/IDBErrorEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent\">error event</a>, with its <a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\">code</a> set to <code><a title=\"en/IndexedDB/IDBDatabaseException#ABORT ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#ABORT_ERR\">ABORT_ERR</a></code> and a suitable <a title=\"en/IndexedDB/IDBEvent#attr message\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBEvent#attr_message\">message</a>.</p>\n\n<p>All pending <a title=\"IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\"><code>IDBRequest</code></a> objects created during this transaction have their <code>errorCode</code> set to <code>ABORT_ERR</code>.</p>\n<div id=\"section_12\"><span id=\"Exceptions\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a>, with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>The transaction has already been committed or aborted.</dd>\n</dl>\n</div>","name":"abort","id":"abort0()","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBTransaction","line":"1215","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"$dom_addEventListener","id":"$dom_addEventListener3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","line":"1222","kind":"param"},{"ref":{"refId":"dart.dom.html/EventListener","name":"EventListener"},"name":"listener","id":"listener","line":"1222","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"useCapture","id":"useCapture","line":"1222","kind":"param"}],"line":"1219","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"dispatchEvent","id":"dispatchEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","line":"1226","kind":"param"}],"line":"1224","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/ObjectStore","name":"ObjectStore"},"mdnCommentHtml":"<p>Returns an object store that has already been added to the scope of this transaction. Every call to this method on the same transaction object, with the same name, returns the same <a title=\"en/IndexedDB/IDBObjectStore\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore\">IDBObjectStore</a> instance. If this method is called on a different transaction object, a different IDBObjectStore instance is returned.</p>\n\n<div id=\"section_14\"><span id=\"Parameters\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>name</dt> <dd>The name of the requested object store.</dd>\n</dl>\n</div><div id=\"section_15\"><span id=\"Returns\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"IDBObjectStore\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore\">IDBObjectStore</a></code></dt> <dd>An object for accessing the requested object store.</dd>\n</dl>\n</div><div id=\"section_16\"><span id=\"Exceptions_2\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>The method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/DatabaseException#NOT FOUND ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR\">NOT_FOUND_ERR</a></code></dt> <dd>The requested object store is not in this transaction's scope.</dd> <dt><code><a title=\"en/IndexedDB/DatabaseException#NOT FOUND ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>request is made on a source object that has been deleted or removed..</dd>\n</dl>\n</div>","name":"objectStore","id":"objectStore1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"1230","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBTransaction","line":"1228","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"$dom_removeEventListener","id":"$dom_removeEventListener3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","line":"1235","kind":"param"},{"ref":{"refId":"dart.dom.html/EventListener","name":"EventListener"},"name":"listener","id":"listener","line":"1235","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"useCapture","id":"useCapture","line":"1235","kind":"param"}],"line":"1232","kind":"method"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"dart.dom.indexed_db/Database","name":"Database"}],"name":"Future"},"comment":"\nProvides a Future which will be completed once the transaction has\ncompleted.\n\nThe future will error if an error occurrs on the transaction or if the\ntransaction is aborted.\n","name":"completed","id":"completed","line":"1164","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"Stream"},"mdnCommentHtml":"The event handler for the <code>onabort</code> event.","name":"onAbort","id":"onAbort","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBTransaction","line":"1237","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"Stream"},"mdnCommentHtml":"The event handler for the <code>oncomplete</code> event.","name":"onComplete","id":"onComplete","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBTransaction","line":"1241","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"Stream"},"mdnCommentHtml":"The event handler for the <code>error </code>event.","name":"onError","id":"onError","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBTransaction","line":"1245","kind":"property"},{"ref":{"refId":"dart.dom.html/EventStreamProvider","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"EventStreamProvider"},"isStatic":true,"name":"abortEvent","id":"abortEvent","line":"1185","kind":"variable"},{"ref":{"refId":"dart.dom.html/EventStreamProvider","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"EventStreamProvider"},"isStatic":true,"name":"completeEvent","id":"completeEvent","line":"1189","kind":"variable"},{"ref":{"refId":"dart.dom.html/EventStreamProvider","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"EventStreamProvider"},"isStatic":true,"name":"errorEvent","id":"errorEvent","line":"1193","kind":"variable"},{"ref":{"refId":"dart.dom.indexed_db/Database","name":"Database"},"isFinal":true,"mdnCommentHtml":"The database connection that this transaction is associated with.","name":"db","id":"db","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBTransaction","line":"1197","kind":"variable"},{"ref":{"refId":"dart.dom.html/DomError","name":"DomError"},"isFinal":true,"name":"error","id":"error","line":"1201","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"mdnCommentHtml":"The mode for isolating access to data in the object stores that are in the scope of the transaction. For possible values, see Constants. The default value is <code><a href=\"#const_read_only\" title=\"#const read only\">READ_ONLY</a></code>.","name":"mode","id":"mode","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBTransaction","line":"1205","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"errorMessage","id":"errorMessage","line":"1213","kind":"variable"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBTransaction","line":"1153","kind":"class"},{"superclass":{"refId":"dart.dom.html/EventTarget","name":"EventTarget"},"mdnCommentHtml":"<p>The <code>IDBRequest</code> interface of the IndexedDB&nbsp;API provides access to results of asynchronous requests to databases and database objects using event handler attributes. Each reading and writing operation on a database is done using a request.</p>\n<p>The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the <code>IDBRequest</code> instance.</p>\n<p>Inherits from: <a title=\"en/DOM/EventTarget\" rel=\"internal\" href=\"https://developer.mozilla.org/en/DOM/EventTarget\">EventTarget</a></p>","name":"Request","id":"Request","children":[{"returnType":{"refId":"void","name":"void"},"name":"$dom_addEventListener","id":"$dom_addEventListener3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","line":"1129","kind":"param"},{"ref":{"refId":"dart.dom.html/EventListener","name":"EventListener"},"name":"listener","id":"listener","line":"1129","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"useCapture","id":"useCapture","line":"1129","kind":"param"}],"line":"1126","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"dispatchEvent","id":"dispatchEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","line":"1133","kind":"param"}],"line":"1131","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"$dom_removeEventListener","id":"$dom_removeEventListener3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","line":"1138","kind":"param"},{"ref":{"refId":"dart.dom.html/EventListener","name":"EventListener"},"name":"listener","id":"listener","line":"1138","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"useCapture","id":"useCapture","line":"1138","kind":"param"}],"line":"1135","kind":"method"},{"name":"result","id":"result","line":"1102","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"Stream"},"name":"onError","id":"onError","line":"1140","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"Stream"},"name":"onSuccess","id":"onSuccess","line":"1144","kind":"property"},{"ref":{"refId":"dart.dom.html/EventStreamProvider","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"EventStreamProvider"},"isStatic":true,"name":"errorEvent","id":"errorEvent","line":"1088","kind":"variable"},{"ref":{"refId":"dart.dom.html/EventStreamProvider","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"EventStreamProvider"},"isStatic":true,"name":"successEvent","id":"successEvent","line":"1092","kind":"variable"},{"ref":{"refId":"dart.dom.html/DomError","name":"DomError"},"isFinal":true,"name":"error","id":"error","line":"1096","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"readyState","id":"readyState","line":"1100","kind":"variable"},{"isFinal":true,"name":"_get_result","isPrivate":true,"id":"_get_result","line":"1107","kind":"variable"},{"isFinal":true,"name":"source","id":"source","line":"1112","kind":"variable"},{"ref":{"refId":"dart.dom.indexed_db/Transaction","name":"Transaction"},"isFinal":true,"name":"transaction","id":"transaction","line":"1116","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"errorMessage","id":"errorMessage","line":"1124","kind":"variable"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBRequest","line":"1081","kind":"class"},{"interfaces":[{"refId":"dart.dom.html/EventTarget","name":"EventTarget"}],"superclass":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"name":"OpenDBRequest","id":"OpenDBRequest","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"Stream"},"name":"onBlocked","id":"onBlocked","line":"1068","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.indexed_db/VersionChangeEvent","name":"VersionChangeEvent"}],"name":"Stream"},"name":"onUpgradeNeeded","id":"onUpgradeNeeded","line":"1072","kind":"property"},{"ref":{"refId":"dart.dom.html/EventStreamProvider","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"EventStreamProvider"},"isStatic":true,"name":"blockedEvent","id":"blockedEvent","line":"1062","kind":"variable"},{"ref":{"refId":"dart.dom.html/EventStreamProvider","arguments":[{"refId":"dart.dom.indexed_db/VersionChangeEvent","name":"VersionChangeEvent"}],"name":"EventStreamProvider"},"isStatic":true,"name":"upgradeNeededEvent","id":"upgradeNeededEvent","line":"1066","kind":"variable"}],"line":"1055","kind":"class"},{"superclass":{"refId":"_interceptors/Interceptor","name":"Interceptor"},"mdnCommentHtml":"The <code>IDBObjectStore</code> interface of the <a title=\"en/IndexedDB\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB\">IndexedDB API</a> represents an <a title=\"en/IndexedDB#gloss object store\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_object_store\">object store</a> in a database.&nbsp;Records within an object store are sorted according to their keys. This sorting enable fast insertion, look-up, and &nbsp;ordered retrieval.&nbsp;","name":"ObjectStore","id":"ObjectStore","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"mdnCommentHtml":"<p>Returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and, in a separate thread, creates a <a class=\"external\" title=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#structured-clone\" rel=\"external\" href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#structured-clone\" target=\"_blank\">structured clone</a> of the <code>value</code>, and stores the cloned value in the object store. If the record is successfully stored, then a success event is fired on the returned request object, using the <a title=\"en/IndexedDB/IDBTransactionEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent\">IDBTransactionEvent</a> interface, with the <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to the key for the stored record, and <code><a title=\"en/IndexedDB/IDBTransactionEvent#attr transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction\">transaction</a></code> set to the transaction in which this object store is opened. If a record already exists in the object store with the <code>key</code> parameter as its key, then an error event is fired on the returned request object, with <a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\">code</a> set to <code><a title=\"en/IndexedDB/DatabaseException#CONSTRAINT ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#CONSTRAINT_ERR\">CONSTRAINT_ERR</a></code>.</p>\n\n<div id=\"section_5\"><span id=\"Parameters\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>value</dt> <dd>The value to be stored.</dd> <dt>key</dt> <dd>The key to use to identify the record. If unspecified, it results to null.</dd>\n</dl>\n</div><div id=\"section_6\"><span id=\"Returns\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_7\"><span id=\"Exceptions\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/DatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></dt> <dd>If the object store uses in-line keys or has a key generator, and a key parameter was provided.<br> If the object store uses out-of-line keys and has no key generator, and no key parameter was provided.<br> If the object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.<br> If the key parameter was provided but does not contain a valid key.<br> If there are indexed on this object store, and using their key path on the value parameter yields a value that is not a valid key.</dd> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#READ ONLY ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#READ_ONLY_ERR\">READ_ONLY_ERR</a></code></dt> <dd>If the mode of the associated transaction is <code><a title=\"en/IndexedDB/IDBTransaction#READ ONLY\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#READ_ONLY\">READ_ONLY</a></code>.</dd> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\">TRANSACTION_INACTIVE_ERR</a></code></dt> <dd>If the associated transaction is not active.</dd>\n</dl>\n<p>This method can raise a <a title=\"en/DOM/DOMException\" rel=\"internal\" href=\"https://developer.mozilla.org/En/DOM/DOMException\">DOMException</a> with the following code:</p>\n<dl> <dt><code>DATA_CLONE_ERR</code></dt> <dd>If the data being stored could not be cloned by the internal structured cloning algorithm.</dd>\n</dl>\n<dl>\n</dl>\n</div>","name":"add","id":"add2()","children":[{"name":"value","id":"value","line":"731","kind":"param"},{"isOptional":true,"name":"key","id":"key","line":"731","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"730","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"mdnCommentHtml":"<p>If the mode of the transaction that this object store belongs to is <code><a title=\"en/IndexedDB/IDBTransaction#READ ONLY\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#READ_ONLY\">READ_ONLY</a></code>, this method raises an&nbsp;<a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with its code set to <code><a title=\"en/IndexedDB/IDBDatabaseException#READ ONLY ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#READ_ONLY_ERR\">READ_ONLY_ERR</a></code>. Otherwise, this method creates and immediately returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and clears this object store in a separate thread. Clearing an object store consists of removing all records from the object store and removing all records in indexes that reference the object store.</p>\n\n<div id=\"section_9\"><span id=\"Returns_2\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_10\"><span id=\"Exceptions_2\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<dl> <dt><a title=\"en/IndexedDB/IDBDatabaseException#READ ONLY ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#READ_ONLY_ERR\"><code>READ_ONLY_ERR</code></a></dt> <dd>If the mode of the transaction that this object store belongs to is READ_ONLY.</dd> <dt><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\"><code>TRANSACTION_INACTIVE_ERR</code></a></dt> <dd>If the transaction that this object store belongs to is not active.</dd>\n</dl></div>","name":"clear","id":"clear0()","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"745","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"mdnCommentHtml":"<p>Immediately returns an <code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code> object, and removes the record specified by the given key from this object store, and any indexes that reference it, in a separate thread. If no record exists in this object store corresponding to the key, an error event is fired on the returned request object, with its <code><a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\">code</a></code> set to <code><a title=\"en/IndexedDB/IDBDatabaseException#NOT FOUND ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR\">NOT_FOUND_ERR</a></code> and an appropriate <code><a title=\"en/IndexedDB/IDBErrorEvent#attr message\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message\">message</a></code>. If the record is successfully removed, then a success event is fired on the returned request object, using the <code><a title=\"en/IndexedDB/IDBTransactionEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent\">IDBTransactionEvent</a></code> interface, with the <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to <code>undefined</code>, and <a title=\"en/IndexedDB/IDBTransactionEvent#attr transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction\">transaction</a> set to the transaction in which this object store is opened.</p>\n<pre>IDBRequest delete (\n  in any key\n) raises (IDBDatabaseException); \n</pre>\n<div id=\"section_20\"><span id=\"Parameters_4\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key to use to identify the record.</dd>\n</dl>\n</div><div id=\"section_21\"><span id=\"Returns_5\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_22\"><span id=\"Exceptions_5\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p></div>","name":"delete","id":"delete1()","children":[{"name":"key_OR_keyRange","id":"key_OR_keyRange","line":"755","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"754","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Future"},"mdnCommentHtml":"<p>Immediately returns an <a title=\"IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object and asynchronously count the amount of objects in the object store that match the parameter, a key or a key range. If the parameter is not valid returns an exception.</p>\n\n<div id=\"section_12\"><span id=\"Parameters_2\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key or key range that identifies the records to be counted.</dd>\n</dl>\n</div><div id=\"section_13\"><span id=\"Returns_3\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_14\"><span id=\"Exceptions_3\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<dl> <dt><code><a href=\"IDBDatabaseException#DATA_ERR\" rel=\"internal\" title=\"en/IndexedDB/DatabaseException#DATA ERR\">DATA_ERR</a></code></dt> <dd>If the object store uses in-line keys or has a key generator, and a key parameter was provided.<br> If the object store uses out-of-line keys and has no key generator, and no key parameter was provided.<br> If the object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.<br> If the key parameter was provided but does not contain a valid key.<br> If there are indexed on this object store, and using their key path on the value parameter yields a value that is not a valid key.</dd> <dt><code><a href=\"IDBDatabaseException#NOT_ALLOWED_ERR\" rel=\"internal\" title=\"en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>The request was made on a source object that has been deleted or removed.</dd>\n</dl></div>","name":"count","id":"count1()","children":[{"isOptional":true,"name":"key_OR_range","id":"key_OR_range","line":"764","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"763","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"mdnCommentHtml":"<p>Returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and, in a separate thread, creates a <a class=\"external\" title=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#structured-clone\" rel=\"external\" href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#structured-clone\" target=\"_blank\">structured clone</a> of the <code>value</code>, and stores the cloned value in the object store. If the record is successfully stored, then a success event is fired on the returned request object, using the <a title=\"en/IndexedDB/IDBTransactionEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent\">IDBTransactionEvent</a> interface, with the <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to the key for the stored record, and <code><a title=\"en/IndexedDB/IDBTransactionEvent#attr transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction\">transaction</a></code> set to the transaction in which this object store is opened.</p>\n\n<div id=\"section_39\"><span id=\"Parameters_9\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>value</dt> <dd>The value to be stored.</dd> <dt>key</dt> <dd>The key to use to identify the record. If unspecified, it results to null.</dd>\n</dl>\n</div><div id=\"section_40\"><span id=\"Returns_9\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt>IDBRequest</dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_41\"><span id=\"Exceptions_10\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<dl> <li> <ul> <li>If this object store uses <a title=\"en/IndexedDB#gloss out-of-line key\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_out-of-line_key\">out-of-line keys</a> and does not use a <a title=\"en/IndexedDB#gloss key generator\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_key_generator\">key generator</a>, but the <code>key</code> parameter was not passed</li> <li>If the object store uses <a title=\"en/IndexedDB#gloss in-line key\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_in-line_key\">in-line keys</a>, but the <code>value</code> object does not have a property identified by the object store's key path.</li> </ul> </li> <dt><code><a title=\"en/IndexedDB/DatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>If the object store is not in the <a title=\"en/IndexedDB#gloss scope\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_scope\">scope</a> of any existing <a title=\"en/IndexedDB#gloss transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_transaction\">transaction</a>, or if the associated transaction's mode is <a title=\"en/IndexedDB/IDBTransaction#const read only\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#const_read_only\"><code>READ_ONLY</code></a>&nbsp;or <a title=\"en/IndexedDB/IDBTransaction#const snapshot read\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#const_snapshot_read\"><code>SNAPSHOT_READ</code></a>.</dd> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#SERIAL ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#SERIAL_ERR\">SERIAL_ERR</a></code></dt> <dd>If the data being stored could not be serialized by the internal structured cloning algorithm.</dd>\n</dl>\n<p>This method can raise a <a title=\"en/DOM/DOMException\" rel=\"internal\" href=\"https://developer.mozilla.org/En/DOM/DOMException\">DOMException</a> with the following code:</p>\n<dl> <dt><code>DATA_CLONE_ERR</code></dt> <dd>If the data being stored could not be cloned by the internal structured cloning algorithm.</dd>\n</dl>\n</div>","name":"put","id":"put2()","children":[{"name":"value","id":"value","line":"779","kind":"param"},{"isOptional":true,"name":"key","id":"key","line":"779","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"778","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"mdnCommentHtml":"<p>Immediately returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and retrieves the requested record from the object store in a separate thread. If the operation is successful, then a success event is fired on the returned object, using the <a title=\"en/IndexedDB/IDBTransactionEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent\">IDBTransactionEvent</a> interface, with its <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to the retrieved value, and <code><a title=\"en/IndexedDB/IDBTransactionEvent#attr transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction\">transaction</a></code> set to the transaction in which this object store is opened. If a record does not exist in the object store for the key parameter, then an error event is fired on the returned object, with its <code><a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\">code</a></code> set to <code><a title=\"en/IndexedDB/IDBDatabaseException#NOT FOUND ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR\">NOT_FOUND_ERR</a></code> and an appropriate <code><a title=\"en/IndexedDB/IDBErrorEvent#attr message\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message\">message</a></code>.</p>\n<p></p><div class=\"note\"><strong>Note:</strong>&nbsp;This function produces the same result if no record with the given key exists in the database as when a record exists, but with an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>\n<p></p>\n\n<div id=\"section_27\"><span id=\"Parameters_6\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key identifying the record to retrieve.</dd>\n</dl>\n</div><div id=\"section_28\"><span id=\"Returns_6\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_29\"><span id=\"Exceptions_7\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></dt> <dd>If the <code>key</code> parameter was not a valid value.</dd> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\">TRANSACTION_INACTIVE_ERR</a></code></dt> <dd>If the associated transaction is not active.</dd>\n</dl>\n</div>","name":"getObject","id":"getObject1()","children":[{"name":"key","id":"key","line":"794","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"793","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.indexed_db/CursorWithValue","name":"CursorWithValue"}],"name":"Stream"},"mdnCommentHtml":"<p>Immediately returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and creates a <a title=\"en/IndexedDB#gloss cursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_cursor\">cursor</a> over the records in this object store, in a separate thread. If there is even a single record that matches the <a title=\"en/IndexedDB#gloss key range\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_key_range\">key range</a>, then a success event is fired on the returned object, with its <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to the <a title=\"en/IndexedDB/IDBCursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBCursor\">IDBCursor</a> object for the new cursor. If no records match the key range, then a success event is fired on the returned object, with its <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to null.</p>\n<pre>IDBRequest openCursor (\n&nbsp; in optional IDBKeyRange range, \n&nbsp; in optional unsigned short direction\n) raises (IDBDatabaseException);\n</pre>\n<div id=\"section_35\"><span id=\"Parameters_8\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>range</dt> <dd>The key range to use as the cursor's range. If this parameter is unspecified or null, then the range includes all the records in the object store.</dd> <dt>direction</dt> <dd>The cursor's <a title=\"en/IndexedDB#gloss direction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_direction\">direction</a>.</dd>\n</dl>\n</div><div id=\"section_36\"><span id=\"Returns_8\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_37\"><span id=\"Exceptions_9\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an IDBDatabaseException with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/DatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>If this object store is not in the scope of any existing transaction on the connected database.</dd>\n</dl>\n</div>","comment":"\nCreates a stream of cursors over the records in this object store.\n\n**The stream must be manually advanced by calling [Cursor.next] after\neach item or by specifying autoAdvance to be true.**\n\n    var cursors = objectStore.openCursor().listen(\n      (cursor) {\n        // ...some processing with the cursor\n        cursor.next(); // advance onto the next cursor.\n      },\n      onDone: () {\n        // called when there are no more cursors.\n        print('all done!');\n      });\n\nAsynchronous operations which are not related to the current transaction\nwill cause the transaction to automatically be committed-- all processing\nmust be done synchronously unless they are additional async requests to\nthe current transaction.\n","name":"openCursor","id":"openCursor4()","children":[{"isNamed":true,"isOptional":true,"name":"key","id":"key","line":"826","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isOptional":true,"name":"range","id":"range","line":"826","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"direction","id":"direction","line":"826","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"autoAdvance","id":"autoAdvance","line":"827","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"825","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Index","name":"Index"},"mdnCommentHtml":"<p>Creates and returns a new index in the connected database. Note that this method must be called only from a <a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\"><code>VERSION_CHANGE</code></a> transaction callback.</p>\n<pre>IDBIndex createIndex (\n&nbsp; in DOMString name, \n&nbsp; in DOMString keyPath, \n&nbsp; in Object optionalParameters\n) raises (IDBDatabaseException);\n\n</pre>\n<div id=\"section_16\"><span id=\"Parameters_3\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>name</dt> <dd>The name of the index to create.</dd> <dt>keyPath</dt> <dd>The key path for the index to use.</dd> <dt>optionalParameters</dt> <dd> <div class=\"warning\"><strong>Warning:</strong> The latest draft of the specification changed this to <code>IDBIndexParameters</code>, which is not yet recognized by any browser</div> <p>Options object whose attributes are optional parameters to the method. It includes the following properties:</p> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code>unique</code></td> <td>If true, the index will not allow duplicate values for a single key.</td> </tr> <tr> <td><code>multientry</code></td> <td>If true, the index will add an entry in the index for each array element when the <em>keypath</em> resolves to an Array. If false, it will add one single entry containing the Array.</td> </tr> </tbody> </table> <p>Unknown parameters are ignored.</p> </dd> <dd></dd>\n</dl>\n</div><div id=\"section_17\"><span id=\"Returns_4\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><a title=\"en/IndexedDB/IDBIndex\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBIndex\">IDBIndex</a></dt> <dd>The newly created index.</dd>\n</dl>\n</div><div id=\"section_18\"><span id=\"Exceptions_4\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/DatabaseException#CONSTRAINT ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#CONSTRAINT_ERR\">CONSTRAINT_ERR</a></code></dt> <dd>If an index with the same name (based on case-sensitive comparison) already exists in the connected database.</dd> <dt><code><a title=\"en/IndexedDB/DatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>If this method was not called from a <a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\"><code>VERSION_CHANGE</code></a> transaction callback.</dd>\n</dl></div>","name":"createIndex","id":"createIndex4()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"849","kind":"param"},{"name":"keyPath","id":"keyPath","line":"849","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"unique","id":"unique","line":"849","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"multiEntry","id":"multiEntry","line":"849","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"848","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and, in a separate thread, creates a <a class=\"external\" title=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#structured-clone\" rel=\"external\" href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#structured-clone\" target=\"_blank\">structured clone</a> of the <code>value</code>, and stores the cloned value in the object store. If the record is successfully stored, then a success event is fired on the returned request object, using the <a title=\"en/IndexedDB/IDBTransactionEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent\">IDBTransactionEvent</a> interface, with the <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to the key for the stored record, and <code><a title=\"en/IndexedDB/IDBTransactionEvent#attr transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction\">transaction</a></code> set to the transaction in which this object store is opened. If a record already exists in the object store with the <code>key</code> parameter as its key, then an error event is fired on the returned request object, with <a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\">code</a> set to <code><a title=\"en/IndexedDB/DatabaseException#CONSTRAINT ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#CONSTRAINT_ERR\">CONSTRAINT_ERR</a></code>.</p>\n\n<div id=\"section_5\"><span id=\"Parameters\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>value</dt> <dd>The value to be stored.</dd> <dt>key</dt> <dd>The key to use to identify the record. If unspecified, it results to null.</dd>\n</dl>\n</div><div id=\"section_6\"><span id=\"Returns\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_7\"><span id=\"Exceptions\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/DatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></dt> <dd>If the object store uses in-line keys or has a key generator, and a key parameter was provided.<br> If the object store uses out-of-line keys and has no key generator, and no key parameter was provided.<br> If the object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.<br> If the key parameter was provided but does not contain a valid key.<br> If there are indexed on this object store, and using their key path on the value parameter yields a value that is not a valid key.</dd> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#READ ONLY ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#READ_ONLY_ERR\">READ_ONLY_ERR</a></code></dt> <dd>If the mode of the associated transaction is <code><a title=\"en/IndexedDB/IDBTransaction#READ ONLY\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#READ_ONLY\">READ_ONLY</a></code>.</dd> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\">TRANSACTION_INACTIVE_ERR</a></code></dt> <dd>If the associated transaction is not active.</dd>\n</dl>\n<p>This method can raise a <a title=\"en/DOM/DOMException\" rel=\"internal\" href=\"https://developer.mozilla.org/En/DOM/DOMException\">DOMException</a> with the following code:</p>\n<dl> <dt><code>DATA_CLONE_ERR</code></dt> <dd>If the data being stored could not be cloned by the internal structured cloning algorithm.</dd>\n</dl>\n<dl>\n</dl>\n</div>","name":"$dom_add","id":"$dom_add2()","children":[{"name":"value","id":"value","line":"890","kind":"param"},{"isOptional":true,"name":"key","id":"key","line":"890","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"885","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"name":"_$dom_add_1","isPrivate":true,"id":"_$dom_add_12()","children":[{"name":"value","id":"value","line":"905","kind":"param"},{"name":"key","id":"key","line":"905","kind":"param"}],"line":"899","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"name":"_$dom_add_2","isPrivate":true,"id":"_$dom_add_21()","children":[{"name":"value","id":"value","line":"912","kind":"param"}],"line":"906","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>If the mode of the transaction that this object store belongs to is <code><a title=\"en/IndexedDB/IDBTransaction#READ ONLY\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#READ_ONLY\">READ_ONLY</a></code>, this method raises an&nbsp;<a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with its code set to <code><a title=\"en/IndexedDB/IDBDatabaseException#READ ONLY ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#READ_ONLY_ERR\">READ_ONLY_ERR</a></code>. Otherwise, this method creates and immediately returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and clears this object store in a separate thread. Clearing an object store consists of removing all records from the object store and removing all records in indexes that reference the object store.</p>\n\n<div id=\"section_9\"><span id=\"Returns_2\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_10\"><span id=\"Exceptions_2\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<dl> <dt><a title=\"en/IndexedDB/IDBDatabaseException#READ ONLY ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#READ_ONLY_ERR\"><code>READ_ONLY_ERR</code></a></dt> <dd>If the mode of the transaction that this object store belongs to is READ_ONLY.</dd> <dt><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\"><code>TRANSACTION_INACTIVE_ERR</code></a></dt> <dd>If the transaction that this object store belongs to is not active.</dd>\n</dl></div>","name":"$dom_clear","id":"$dom_clear0()","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"914","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Immediately returns an <a title=\"IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object and asynchronously count the amount of objects in the object store that match the parameter, a key or a key range. If the parameter is not valid returns an exception.</p>\n\n<div id=\"section_12\"><span id=\"Parameters_2\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key or key range that identifies the records to be counted.</dd>\n</dl>\n</div><div id=\"section_13\"><span id=\"Returns_3\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_14\"><span id=\"Exceptions_3\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<dl> <dt><code><a href=\"IDBDatabaseException#DATA_ERR\" rel=\"internal\" title=\"en/IndexedDB/DatabaseException#DATA ERR\">DATA_ERR</a></code></dt> <dd>If the object store uses in-line keys or has a key generator, and a key parameter was provided.<br> If the object store uses out-of-line keys and has no key generator, and no key parameter was provided.<br> If the object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.<br> If the key parameter was provided but does not contain a valid key.<br> If there are indexed on this object store, and using their key path on the value parameter yields a value that is not a valid key.</dd> <dt><code><a href=\"IDBDatabaseException#NOT_ALLOWED_ERR\" rel=\"internal\" title=\"en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>The request was made on a source object that has been deleted or removed.</dd>\n</dl></div>","name":"$dom_count","id":"$dom_count1()","children":[{"isOptional":true,"name":"key_OR_range","id":"key_OR_range","line":"922","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"919","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Index","name":"Index"},"mdnCommentHtml":"<p>Creates and returns a new index in the connected database. Note that this method must be called only from a <a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\"><code>VERSION_CHANGE</code></a> transaction callback.</p>\n<pre>IDBIndex createIndex (\n&nbsp; in DOMString name, \n&nbsp; in DOMString keyPath, \n&nbsp; in Object optionalParameters\n) raises (IDBDatabaseException);\n\n</pre>\n<div id=\"section_16\"><span id=\"Parameters_3\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>name</dt> <dd>The name of the index to create.</dd> <dt>keyPath</dt> <dd>The key path for the index to use.</dd> <dt>optionalParameters</dt> <dd> <div class=\"warning\"><strong>Warning:</strong> The latest draft of the specification changed this to <code>IDBIndexParameters</code>, which is not yet recognized by any browser</div> <p>Options object whose attributes are optional parameters to the method. It includes the following properties:</p> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code>unique</code></td> <td>If true, the index will not allow duplicate values for a single key.</td> </tr> <tr> <td><code>multientry</code></td> <td>If true, the index will add an entry in the index for each array element when the <em>keypath</em> resolves to an Array. If false, it will add one single entry containing the Array.</td> </tr> </tbody> </table> <p>Unknown parameters are ignored.</p> </dd> <dd></dd>\n</dl>\n</div><div id=\"section_17\"><span id=\"Returns_4\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><a title=\"en/IndexedDB/IDBIndex\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBIndex\">IDBIndex</a></dt> <dd>The newly created index.</dd>\n</dl>\n</div><div id=\"section_18\"><span id=\"Exceptions_4\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/DatabaseException#CONSTRAINT ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#CONSTRAINT_ERR\">CONSTRAINT_ERR</a></code></dt> <dd>If an index with the same name (based on case-sensitive comparison) already exists in the connected database.</dd> <dt><code><a title=\"en/IndexedDB/DatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>If this method was not called from a <a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\"><code>VERSION_CHANGE</code></a> transaction callback.</dd>\n</dl></div>","name":"$dom_createIndex","id":"$dom_createIndex3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"926","kind":"param"},{"name":"keyPath","id":"keyPath","line":"926","kind":"param"},{"ref":{"refId":"dart.core/Map","name":"Map"},"isOptional":true,"name":"options","id":"options","line":"926","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"924","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Index","name":"Index"},"name":"_$dom_createIndex_1","isPrivate":true,"id":"_$dom_createIndex_12()","children":[{"name":"name","id":"name","line":"948","kind":"param"},{"ref":{"refId":"dart.core/List","name":"List"},"name":"keyPath","id":"keyPath","line":"948","kind":"param"}],"line":"945","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Index","name":"Index"},"name":"_$dom_createIndex_2","isPrivate":true,"id":"_$dom_createIndex_23()","children":[{"name":"name","id":"name","line":"952","kind":"param"},{"ref":{"refId":"dart.core/List","name":"List"},"name":"keyPath","id":"keyPath","line":"952","kind":"param"},{"name":"options","id":"options","line":"952","kind":"param"}],"line":"949","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Index","name":"Index"},"name":"_$dom_createIndex_3","isPrivate":true,"id":"_$dom_createIndex_32()","children":[{"name":"name","id":"name","line":"956","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"keyPath","id":"keyPath","line":"956","kind":"param"}],"line":"953","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Index","name":"Index"},"name":"_$dom_createIndex_4","isPrivate":true,"id":"_$dom_createIndex_43()","children":[{"name":"name","id":"name","line":"960","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"keyPath","id":"keyPath","line":"960","kind":"param"},{"name":"options","id":"options","line":"960","kind":"param"}],"line":"957","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Immediately returns an <code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code> object, and removes the record specified by the given key from this object store, and any indexes that reference it, in a separate thread. If no record exists in this object store corresponding to the key, an error event is fired on the returned request object, with its <code><a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\">code</a></code> set to <code><a title=\"en/IndexedDB/IDBDatabaseException#NOT FOUND ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR\">NOT_FOUND_ERR</a></code> and an appropriate <code><a title=\"en/IndexedDB/IDBErrorEvent#attr message\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message\">message</a></code>. If the record is successfully removed, then a success event is fired on the returned request object, using the <code><a title=\"en/IndexedDB/IDBTransactionEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent\">IDBTransactionEvent</a></code> interface, with the <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to <code>undefined</code>, and <a title=\"en/IndexedDB/IDBTransactionEvent#attr transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction\">transaction</a> set to the transaction in which this object store is opened.</p>\n<pre>IDBRequest delete (\n  in any key\n) raises (IDBDatabaseException); \n</pre>\n<div id=\"section_20\"><span id=\"Parameters_4\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key to use to identify the record.</dd>\n</dl>\n</div><div id=\"section_21\"><span id=\"Returns_5\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_22\"><span id=\"Exceptions_5\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p></div>","name":"$dom_delete","id":"$dom_delete1()","children":[{"name":"key_OR_keyRange","id":"key_OR_keyRange","line":"965","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"962","kind":"method"},{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"<p>Destroys the index with the specified name in the connected database. Note that this method must be called only from a <code><a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\">VERSION_CHANGE</a></code> transaction callback.</p>\n<pre>void removeIndex(\n  in DOMString indexName\n) raises (IDBDatabaseException); \n</pre>\n<div id=\"section_24\"><span id=\"Parameters_5\"></span><h5 class=\"editable\">Parameters</h5>\n<p>&nbsp;</p>\n<dl> <dt><code><a title=\"en/IndexedDB/DatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>If the object store is not in the <a title=\"en/IndexedDB#gloss scope\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_scope\">scope</a> of any existing <a title=\"en/IndexedDB#gloss transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_transaction\">transaction</a>, or if the associated transaction's mode is <a title=\"en/IndexedDB/IDBTransaction#const read only\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#const_read_only\"><code>READ_ONLY</code></a>&nbsp;or <a title=\"en/IndexedDB/IDBTransaction#const snapshot read\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#const_snapshot_read\"><code>SNAPSHOT_READ</code></a>.</dd> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\">TRANSACTION_INACTIVE_ERR</a></code></dt> <dd>If the associated transaction is not active.</dd> <dt>indexName</dt> <dd>The name of the existing index to remove.</dd>\n</dl>\n</div><div id=\"section_25\"><span id=\"Exceptions_6\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/DatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>If this method was not called from a <a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\">VERSION_CHANGE</a> transaction callback.</dd> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT FOUND ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR\">NOT_FOUND_ERR</a></code></dt> <dd>If no index exists with the specified name (based on case-sensitive comparison) in the connected database.</dd>\n</dl>\n</div>","name":"deleteIndex","id":"deleteIndex1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"969","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"967","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Immediately returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and retrieves the requested record from the object store in a separate thread. If the operation is successful, then a success event is fired on the returned object, using the <a title=\"en/IndexedDB/IDBTransactionEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent\">IDBTransactionEvent</a> interface, with its <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to the retrieved value, and <code><a title=\"en/IndexedDB/IDBTransactionEvent#attr transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction\">transaction</a></code> set to the transaction in which this object store is opened. If a record does not exist in the object store for the key parameter, then an error event is fired on the returned object, with its <code><a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\">code</a></code> set to <code><a title=\"en/IndexedDB/IDBDatabaseException#NOT FOUND ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR\">NOT_FOUND_ERR</a></code> and an appropriate <code><a title=\"en/IndexedDB/IDBErrorEvent#attr message\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message\">message</a></code>.</p>\n<p></p><div class=\"note\"><strong>Note:</strong>&nbsp;This function produces the same result if no record with the given key exists in the database as when a record exists, but with an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>\n<p></p>\n\n<div id=\"section_27\"><span id=\"Parameters_6\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key identifying the record to retrieve.</dd>\n</dl>\n</div><div id=\"section_28\"><span id=\"Returns_6\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_29\"><span id=\"Exceptions_7\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></dt> <dd>If the <code>key</code> parameter was not a valid value.</dd> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\">TRANSACTION_INACTIVE_ERR</a></code></dt> <dd>If the associated transaction is not active.</dd>\n</dl>\n</div>","name":"$dom_get","id":"$dom_get1()","children":[{"name":"key","id":"key","line":"977","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"971","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Index","name":"Index"},"mdnCommentHtml":"<p>Opens the named index in this object store.</p>\n\n<div id=\"section_31\"><span id=\"Parameters_7\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>name</dt> <dd>The name of the index to open.</dd>\n</dl>\n</div><div id=\"section_32\"><span id=\"Returns_7\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBIndex\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBIndex\">IDBIndex</a></code></dt> <dd>An object for accessing the index.</dd>\n</dl>\n</div><div id=\"section_33\"><span id=\"Exceptions_8\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT FOUND ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR\">NOT_FOUND_ERR</a></code></dt> <dd>If no index exists with the specified name (based on case-sensitive comparison) in the connected database.</dd>\n</dl>\n</div>","name":"index","id":"index1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"981","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"979","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Immediately returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and creates a <a title=\"en/IndexedDB#gloss cursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_cursor\">cursor</a> over the records in this object store, in a separate thread. If there is even a single record that matches the <a title=\"en/IndexedDB#gloss key range\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_key_range\">key range</a>, then a success event is fired on the returned object, with its <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to the <a title=\"en/IndexedDB/IDBCursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBCursor\">IDBCursor</a> object for the new cursor. If no records match the key range, then a success event is fired on the returned object, with its <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to null.</p>\n<pre>IDBRequest openCursor (\n&nbsp; in optional IDBKeyRange range, \n&nbsp; in optional unsigned short direction\n) raises (IDBDatabaseException);\n</pre>\n<div id=\"section_35\"><span id=\"Parameters_8\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>range</dt> <dd>The key range to use as the cursor's range. If this parameter is unspecified or null, then the range includes all the records in the object store.</dd> <dt>direction</dt> <dd>The cursor's <a title=\"en/IndexedDB#gloss direction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_direction\">direction</a>.</dd>\n</dl>\n</div><div id=\"section_36\"><span id=\"Returns_8\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_37\"><span id=\"Exceptions_9\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an IDBDatabaseException with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/DatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>If this object store is not in the scope of any existing transaction on the connected database.</dd>\n</dl>\n</div>","name":"$dom_openCursor","id":"$dom_openCursor2()","children":[{"isOptional":true,"name":"key_OR_range","id":"key_OR_range","line":"989","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"direction","id":"direction","line":"989","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"983","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and, in a separate thread, creates a <a class=\"external\" title=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#structured-clone\" rel=\"external\" href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#structured-clone\" target=\"_blank\">structured clone</a> of the <code>value</code>, and stores the cloned value in the object store. If the record is successfully stored, then a success event is fired on the returned request object, using the <a title=\"en/IndexedDB/IDBTransactionEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent\">IDBTransactionEvent</a> interface, with the <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to the key for the stored record, and <code><a title=\"en/IndexedDB/IDBTransactionEvent#attr transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction\">transaction</a></code> set to the transaction in which this object store is opened.</p>\n\n<div id=\"section_39\"><span id=\"Parameters_9\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>value</dt> <dd>The value to be stored.</dd> <dt>key</dt> <dd>The key to use to identify the record. If unspecified, it results to null.</dd>\n</dl>\n</div><div id=\"section_40\"><span id=\"Returns_9\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt>IDBRequest</dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_41\"><span id=\"Exceptions_10\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<dl> <li> <ul> <li>If this object store uses <a title=\"en/IndexedDB#gloss out-of-line key\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_out-of-line_key\">out-of-line keys</a> and does not use a <a title=\"en/IndexedDB#gloss key generator\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_key_generator\">key generator</a>, but the <code>key</code> parameter was not passed</li> <li>If the object store uses <a title=\"en/IndexedDB#gloss in-line key\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_in-line_key\">in-line keys</a>, but the <code>value</code> object does not have a property identified by the object store's key path.</li> </ul> </li> <dt><code><a title=\"en/IndexedDB/DatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></dt> <dd>If the object store is not in the <a title=\"en/IndexedDB#gloss scope\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_scope\">scope</a> of any existing <a title=\"en/IndexedDB#gloss transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_transaction\">transaction</a>, or if the associated transaction's mode is <a title=\"en/IndexedDB/IDBTransaction#const read only\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#const_read_only\"><code>READ_ONLY</code></a>&nbsp;or <a title=\"en/IndexedDB/IDBTransaction#const snapshot read\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#const_snapshot_read\"><code>SNAPSHOT_READ</code></a>.</dd> <dt><code><a title=\"en/IndexedDB/IDBDatabaseException#SERIAL ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#SERIAL_ERR\">SERIAL_ERR</a></code></dt> <dd>If the data being stored could not be serialized by the internal structured cloning algorithm.</dd>\n</dl>\n<p>This method can raise a <a title=\"en/DOM/DOMException\" rel=\"internal\" href=\"https://developer.mozilla.org/En/DOM/DOMException\">DOMException</a> with the following code:</p>\n<dl> <dt><code>DATA_CLONE_ERR</code></dt> <dd>If the data being stored could not be cloned by the internal structured cloning algorithm.</dd>\n</dl>\n</div>","name":"$dom_put","id":"$dom_put2()","children":[{"name":"value","id":"value","line":"996","kind":"param"},{"isOptional":true,"name":"key","id":"key","line":"996","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"991","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"name":"_$dom_put_1","isPrivate":true,"id":"_$dom_put_12()","children":[{"name":"value","id":"value","line":"1011","kind":"param"},{"name":"key","id":"key","line":"1011","kind":"param"}],"line":"1005","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"name":"_$dom_put_2","isPrivate":true,"id":"_$dom_put_21()","children":[{"name":"value","id":"value","line":"1018","kind":"param"}],"line":"1012","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.indexed_db/Cursor","name":"Cursor"}],"name":"Stream"},"isStatic":true,"comment":"\nHelper for iterating over cursors in a request.\n","name":"_cursorStreamFromResult","isPrivate":true,"id":"_cursorStreamFromResult2()","children":[{"ref":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"name":"request","id":"request","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"autoAdvance","id":"autoAdvance","line":"1025","kind":"param"}],"line":"1024","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"name":"autoIncrement","id":"autoIncrement","line":"864","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"isFinal":true,"mdnCommentHtml":"A list of the names of <a title=\"en/IndexedDB#gloss index\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_index\">indexes</a> on objects in this object store.","name":"indexNames","id":"indexNames","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"870","kind":"variable"},{"isFinal":true,"mdnCommentHtml":"The <a title=\"en/IndexedDB#gloss key path\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_key_path\">key path</a> of this object store. If this attribute is null, the application must provide a key for each modification operation.","name":"keyPath","id":"keyPath","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"875","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"mdnCommentHtml":"The name of this object store.","name":"name","id":"name","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"879","kind":"variable"},{"ref":{"refId":"dart.dom.indexed_db/Transaction","name":"Transaction"},"isFinal":true,"name":"transaction","id":"transaction","line":"883","kind":"variable"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore","line":"726","kind":"class"},{"superclass":{"refId":"_interceptors/Interceptor","name":"Interceptor"},"mdnCommentHtml":"The <code>IDBKeyRange</code> interface of the <a title=\"en/IndexedDB\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB\">IndexedDB API</a> represents a continuous interval over some data type that is used for keys. Records can be retrieved from object stores and indexes using keys or a range of keys. You can limit the range using lower and upper bounds. For example, you can iterate over all values of a key between x and y.","name":"KeyRange","id":"KeyRange","children":[{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"mdnCommentHtml":"<p>Creates a key range with upper and lower bounds. The bounds can be open (that is, the bounds excludes the endpoint values) or closed (that is, the bounds includes the endpoint values). By default, the bounds include the endpoints and are closed.</p>\n<pre>IDBKeyRange bound (\n   in any lower,\n   in any upper, \n   in optional boolean lowerOpen, \n   in optional boolean upperOpen\n);\n</pre>\n<div id=\"section_9\"><span id=\"Parameters\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>lower</dt> <dd>The lower bound of the key range.</dd> <dt>upper</dt> <dd>The upper bound of the key range.</dd> <dt>lowerOpen</dt> <dd><em>Optional</em>. If false (default value), the range includes the lower bound value of the key range.</dd> <dt>upperOpen</dt> <dd><em>Optional</em>. If false (default value), the range includes the upper bound value of the key range.</dd>\n</dl>\n</div><div id=\"section_10\"><span id=\"Returns\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code>IDBKeyRange</code></dt> <dd>The newly created key range.</dd>\n</dl>\n</div><div id=\"section_11\"><span id=\"Exceptions\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBObjectStore\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></dt> <dd>The following conditions raise an exception: <ul> <li>The lower or upper parameters were not passed a valid key.</li> <li>The lower key is greater than the upper key.</li> <li>The lower key and upper key match and either of the bounds are open.</li> </ul> </dd>\n</dl>\n</div>","name":"bound_","id":"bound_4()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"lower","id":"lower","line":"703","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"upper","id":"upper","line":"703","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"lowerOpen","id":"lowerOpen","line":"703","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"upperOpen","id":"upperOpen","line":"703","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBKeyRange","line":"700","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"mdnCommentHtml":"<p>Creates a key range with only a lower bound. By default, it includes the lower endpoint value and is closed.</p>\n<pre>IDBKeyRange lowerBound (\n  in any bound, \n  in optional boolean open\n);\n</pre>\n<div id=\"section_17\"><span id=\"Parameters_3\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>bound</dt> <dd>The value of the lower bound.</dd> <dt>open</dt> <dd><em>Optional</em>. If false (default value), the range includes the lower-bound value.</dd>\n</dl>\n</div><div id=\"section_18\"><span id=\"Returns_3\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code>IDBKeyRange</code></dt> <dd>The newly created key range.</dd>\n</dl>\n</div><div id=\"section_19\"><span id=\"Exceptions_3\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBObjectStore\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore\">DATA_ERR</a></code></dt> <dd>The value parameter was not passed a valid key.</dd>\n</dl>\n</div>","name":"lowerBound_","id":"lowerBound_2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"bound","id":"bound","line":"708","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"open","id":"open","line":"708","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBKeyRange","line":"705","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"mdnCommentHtml":"<p>Creates a new key range containing a single value.</p>\n<pre>IDBKeyRange only (\n  in any value\n);\n</pre>\n<div id=\"section_13\"><span id=\"Parameters_2\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>value</dt> <dd>The single value in the key range.</dd>\n</dl>\n</div><div id=\"section_14\"><span id=\"Returns_2\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code>IDBKeyRange</code></dt> <dd>The newly created key range.</dd>\n</dl>\n</div><div id=\"section_15\"><span id=\"Exceptions_2\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBObjectStore\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></dt> <dd>The value parameter was not passed a valid key.</dd>\n</dl>\n</div>","name":"only_","id":"only_1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"value","id":"value","line":"713","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBKeyRange","line":"710","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"mdnCommentHtml":"<p>Creates a new upper-bound key range. By default, it includes the upper endpoint value and is closed.</p>\n<pre>IDBKeyRange upperBound (\n  in any bound, \n  in optional boolean open\n);\n</pre>\n<div id=\"section_21\"><span id=\"Parameters_4\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>bound</dt> <dd>The value of the upper bound of the range.</dd> <dt>open</dt> <dd><em>Optional</em>. If false (default value), the range includes the lower-bound value.</dd>\n</dl>\n</div><div id=\"section_22\"><span id=\"Returns_4\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code>IDBKeyRange</code></dt> <dd>The newly created key range.</dd>\n</dl>\n</div><div id=\"section_23\"><span id=\"Exceptions_4\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBObjectStore\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></dt> <dd>The value parameter was not passed a valid key.</dd>\n</dl>\n</div>","name":"upperBound_","id":"upperBound_2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"bound","id":"bound","line":"718","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"open","id":"open","line":"718","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBKeyRange","line":"715","kind":"method"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isFinal":true,"name":"lower","id":"lower","line":"685","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"name":"lowerOpen","id":"lowerOpen","line":"689","kind":"variable"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isFinal":true,"name":"upper","id":"upper","line":"694","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"mdnCommentHtml":"Returns false if the upper-bound value is included in the key range.","name":"upperOpen","id":"upperOpen","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBKeyRange","line":"698","kind":"variable"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"mdnCommentHtml":"<p>Creates a new key range containing a single value.</p>\n<pre>IDBKeyRange only (\n  in any value\n);\n</pre>\n<div id=\"section_13\"><span id=\"Parameters_2\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>value</dt> <dd>The single value in the key range.</dd>\n</dl>\n</div><div id=\"section_14\"><span id=\"Returns_2\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code>IDBKeyRange</code></dt> <dd>The newly created key range.</dd>\n</dl>\n</div><div id=\"section_15\"><span id=\"Exceptions_2\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBObjectStore\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></dt> <dd>The value parameter was not passed a valid key.</dd>\n</dl>\n</div>","name":"KeyRange.only","id":"KeyRange.only1()","children":[{"name":"value","id":"value","line":"664","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBKeyRange","line":"663","kind":"constructor"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"mdnCommentHtml":"<p>Creates a key range with only a lower bound. By default, it includes the lower endpoint value and is closed.</p>\n<pre>IDBKeyRange lowerBound (\n  in any bound, \n  in optional boolean open\n);\n</pre>\n<div id=\"section_17\"><span id=\"Parameters_3\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>bound</dt> <dd>The value of the lower bound.</dd> <dt>open</dt> <dd><em>Optional</em>. If false (default value), the range includes the lower-bound value.</dd>\n</dl>\n</div><div id=\"section_18\"><span id=\"Returns_3\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code>IDBKeyRange</code></dt> <dd>The newly created key range.</dd>\n</dl>\n</div><div id=\"section_19\"><span id=\"Exceptions_3\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBObjectStore\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore\">DATA_ERR</a></code></dt> <dd>The value parameter was not passed a valid key.</dd>\n</dl>\n</div>","name":"KeyRange.lowerBound","id":"KeyRange.lowerBound2()","children":[{"name":"bound","id":"bound","line":"668","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"open","id":"open","line":"668","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBKeyRange","line":"667","kind":"constructor"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"mdnCommentHtml":"<p>Creates a new upper-bound key range. By default, it includes the upper endpoint value and is closed.</p>\n<pre>IDBKeyRange upperBound (\n  in any bound, \n  in optional boolean open\n);\n</pre>\n<div id=\"section_21\"><span id=\"Parameters_4\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>bound</dt> <dd>The value of the upper bound of the range.</dd> <dt>open</dt> <dd><em>Optional</em>. If false (default value), the range includes the lower-bound value.</dd>\n</dl>\n</div><div id=\"section_22\"><span id=\"Returns_4\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code>IDBKeyRange</code></dt> <dd>The newly created key range.</dd>\n</dl>\n</div><div id=\"section_23\"><span id=\"Exceptions_4\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBObjectStore\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></dt> <dd>The value parameter was not passed a valid key.</dd>\n</dl>\n</div>","name":"KeyRange.upperBound","id":"KeyRange.upperBound2()","children":[{"name":"bound","id":"bound","line":"672","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"open","id":"open","line":"672","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBKeyRange","line":"671","kind":"constructor"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"name":"KeyRange.bound","id":"KeyRange.bound4()","children":[{"name":"lower","id":"lower","line":"676","kind":"param"},{"name":"upper","id":"upper","line":"676","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"lowerOpen","id":"lowerOpen","line":"677","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"upperOpen","id":"upperOpen","line":"677","kind":"param"}],"line":"675","kind":"constructor"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBKeyRange","line":"660","kind":"class"},{"superclass":{"refId":"_interceptors/Interceptor","name":"Interceptor"},"mdnCommentHtml":"<p>The <code>IDBIndex</code> interface of the <a title=\"en/IndexedDB\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB\">IndexedDB API</a> provides asynchronous access to an <a title=\"en/IndexedDB#gloss index\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_index\">index</a> in a database. An index is a kind of object store for looking up records in another object store, called the <em>referenced object store</em>. You use this interface to retrieve data.</p>\n<p>Inherits from: <a title=\"en/DOM/EventTarget\" rel=\"internal\" href=\"https://developer.mozilla.org/en/DOM/EventTarget\">EventTarget</a></p>","name":"Index","id":"Index","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Future"},"mdnCommentHtml":"<p>Returns an <a title=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and in a separate thread, returns the number of records within a key range. For example, if you want to see how many records are between keys 1000 and 2000 in an object store, you can write the following: <code> var req = store.count(<a title=\"en/IndexedDB/IDBKeyRange\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBKeyRange\">IDBKeyRange</a>.bound(1000, 2000));</code></p>\n<pre>IDBRequest count (\n  in optional any key\n) raises (IDBDatabaseException);\n</pre>\n<div id=\"section_15\"><span id=\"Parameters_3\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be counted.</dd>\n</dl></div><div id=\"section_16\"><span id=\"Returns_3\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\">IDBRequest</a></code></dt>\n</dl>\n<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_17\"><span id=\"Exceptions_3\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise a <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>\n</table>\n</div>","name":"count","id":"count1()","children":[{"isOptional":true,"name":"key_OR_range","id":"key_OR_range","line":"504","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBIndex","line":"503","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"mdnCommentHtml":"<p>Returns an <a title=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and, in a separate thread, finds either:</p>\n<ul> <li>The value in the referenced object store that corresponds to the given key.</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>\n</ul>\n<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title=\"en/IndexedDB/IDBRequest#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result\">result</a></code> of the request object.</p>\n<p></p><div class=\"note\"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>\n<p></p>\n<pre>IDBRequest get (\n  in any key\n) raises (IDBDatabaseException);\n</pre>\n<div id=\"section_7\"><span id=\"Parameters\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>\n</dl>\n</div><div id=\"section_8\"><span id=\"Returns\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\">IDBRequest</a></code></dt>\n</dl>\n<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_9\"><span id=\"Exceptions\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>\n</table>\n</div>","name":"get","id":"get1()","children":[{"name":"key","id":"key","line":"519","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBIndex","line":"518","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"mdnCommentHtml":"<p>Returns an <a title=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and, in a separate thread, finds either:</p>\n<ul> <li>The value in the index that corresponds to the given key</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>\n</ul>\n<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title=\"en/IndexedDB/IDBRequest#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result\">result</a></code> of the request object.</p>\n<p></p><div class=\"note\"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>\n<p></p>\n<pre>IDBRequest getKey (\n  in any key\n) raises (IDBDatabaseException);\n</pre>\n<div id=\"section_11\"><span id=\"Parameters_2\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>\n</dl>\n</div><div id=\"section_12\"><span id=\"Returns_2\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\">IDBRequest</a></code></dt>\n</dl>\n<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_13\"><span id=\"Exceptions_2\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise a <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>\n</table>\n</div>","name":"getKey","id":"getKey1()","children":[{"name":"key","id":"key","line":"530","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBIndex","line":"529","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.indexed_db/CursorWithValue","name":"CursorWithValue"}],"name":"Stream"},"comment":"\nCreates a stream of cursors over the records in this object store.\n\nSee also:\n\n* [ObjectStore.openCursor]\n","name":"openCursor","id":"openCursor4()","children":[{"isNamed":true,"isOptional":true,"name":"key","id":"key","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isOptional":true,"name":"range","id":"range","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"direction","id":"direction","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"autoAdvance","id":"autoAdvance","line":"548","kind":"param"}],"line":"547","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.indexed_db/Cursor","name":"Cursor"}],"name":"Stream"},"comment":"\nCreates a stream of cursors over the records in this object store.\n\nSee also:\n\n* [ObjectStore.openCursor]\n","name":"openKeyCursor","id":"openKeyCursor4()","children":[{"isNamed":true,"isOptional":true,"name":"key","id":"key","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isOptional":true,"name":"range","id":"range","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"direction","id":"direction","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"autoAdvance","id":"autoAdvance","line":"575","kind":"param"}],"line":"574","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Returns an <a title=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and in a separate thread, returns the number of records within a key range. For example, if you want to see how many records are between keys 1000 and 2000 in an object store, you can write the following: <code> var req = store.count(<a title=\"en/IndexedDB/IDBKeyRange\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBKeyRange\">IDBKeyRange</a>.bound(1000, 2000));</code></p>\n<pre>IDBRequest count (\n  in optional any key\n) raises (IDBDatabaseException);\n</pre>\n<div id=\"section_15\"><span id=\"Parameters_3\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be counted.</dd>\n</dl></div><div id=\"section_16\"><span id=\"Returns_3\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\">IDBRequest</a></code></dt>\n</dl>\n<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_17\"><span id=\"Exceptions_3\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise a <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>\n</table>\n</div>","name":"$dom_count","id":"$dom_count1()","children":[{"isOptional":true,"name":"key_OR_range","id":"key_OR_range","line":"619","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBIndex","line":"616","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Returns an <a title=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and, in a separate thread, finds either:</p>\n<ul> <li>The value in the referenced object store that corresponds to the given key.</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>\n</ul>\n<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title=\"en/IndexedDB/IDBRequest#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result\">result</a></code> of the request object.</p>\n<p></p><div class=\"note\"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>\n<p></p>\n<pre>IDBRequest get (\n  in any key\n) raises (IDBDatabaseException);\n</pre>\n<div id=\"section_7\"><span id=\"Parameters\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>\n</dl>\n</div><div id=\"section_8\"><span id=\"Returns\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\">IDBRequest</a></code></dt>\n</dl>\n<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_9\"><span id=\"Exceptions\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>\n</table>\n</div>","name":"$dom_get","id":"$dom_get1()","children":[{"name":"key","id":"key","line":"627","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBIndex","line":"621","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Returns an <a title=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and, in a separate thread, finds either:</p>\n<ul> <li>The value in the index that corresponds to the given key</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>\n</ul>\n<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title=\"en/IndexedDB/IDBRequest#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result\">result</a></code> of the request object.</p>\n<p></p><div class=\"note\"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>\n<p></p>\n<pre>IDBRequest getKey (\n  in any key\n) raises (IDBDatabaseException);\n</pre>\n<div id=\"section_11\"><span id=\"Parameters_2\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>\n</dl>\n</div><div id=\"section_12\"><span id=\"Returns_2\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\">IDBRequest</a></code></dt>\n</dl>\n<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_13\"><span id=\"Exceptions_2\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise a <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>\n</table>\n</div>","name":"$dom_getKey","id":"$dom_getKey1()","children":[{"name":"key","id":"key","line":"636","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBIndex","line":"629","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and, in a separate thread, creates a <a title=\"en/IndexedDB#gloss cursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_cursor\">cursor</a> over the specified key range. The method sets the position of the cursor to the appropriate record, based on the specified direction.</p>\n<ul> <li>If the key range is not specified or is null, then the range includes all the records.</li> <li>If at least one record matches the key range, then a <a title=\"en/IndexedDB/IDBSuccessEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent\">success event</a> is fired on the result object, with its <a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a> set to the new <a title=\"en/IndexedDB/IDBCursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBCursor\">IDBCursor</a> object; the <code><a title=\"en/IndexedDB/IDBCursor#attr value\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBCursor#attr_value\">value</a></code> of the cursor object is set to a structured clone of the referenced value.</li> <li>If no records match the key range, then then an <a title=\"en/IndexedDB/IDBErrorEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent\">error event</a> is fired on the request object, with its <code><a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\">code</a></code> set to <code><a href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR\" rel=\"internal\">NOT_FOUND_ERR</a></code> and a suitable <code><a title=\"en/IndexedDB/IDBErrorEvent#attr message\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message\">message</a></code>.</li>\n</ul>\n<pre>IDBRequest openCursor (\n  in optional any? range, \n  in optional unsigned short direction\n) raises (IDBDatabaseException);\n</pre>\n<div id=\"section_19\"><span id=\"Parameters_4\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>range</dt> <dd><em>Optional.</em> The key range to use as the cursor's range.</dd> <dt>direction</dt> <dd><em>Optional.</em> The cursor's required <a title=\"en/indexedDB#gloss direction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_direction\">direction</a>. See <a title=\"en/IndexedDB/IDBCursor#Constants\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBCursor#Constants\">IDBCursor Constants</a> for possible values.</dd>\n</dl>\n</div><div id=\"section_20\"><span id=\"Returns_4\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\">IDBRequest</a></code></dt>\n</dl>\n<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_21\"><span id=\"Exceptions_4\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>\n</table>\n</div>","name":"$dom_openCursor","id":"$dom_openCursor2()","children":[{"isOptional":true,"name":"key_OR_range","id":"key_OR_range","line":"644","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"direction","id":"direction","line":"644","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBIndex","line":"638","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Returns an <a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a> object, and, in a separate thread, creates a cursor over the specified key range, as arranged by this index. The method sets the position of the cursor to the appropriate record, based on the specified direction.</p>\n<ul> <li>If the key range is not specified or is null, then the range includes all the records.</li> <li>If at least one record matches the key range, then a <a title=\"en/IndexedDB/IDBSuccessEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent\">success event</a> is fired on the result object, with its <a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a> set to the new <a title=\"en/IndexedDB/IDBCursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBCursor\">IDBCursor</a> object; the <code><a title=\"en/IndexedDB/IDBCursor#attr value\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBCursor#attr_value\">value</a></code> of the cursor object is set to the value of the found record.</li> <li>If no records match the key range, then then an <a title=\"en/IndexedDB/IDBErrorEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent\">error event</a> is fired on the request object, with its <code><a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\">code</a></code> set to <code><a href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR\" rel=\"internal\">NOT_FOUND_ERR</a></code> and a suitable <code><a title=\"en/IndexedDB/IDBErrorEvent#attr message\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message\">message</a></code>.</li>\n</ul>\n<pre>IDBRequest openKeyCursor (\n  in optional any? range, \n  in optional unsigned short direction\n) raises (IDBDatabaseException);\n</pre>\n<div id=\"section_23\"><span id=\"Parameters_5\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>range</dt> <dd><em>Optional.</em> The key range to use as the cursor's range.</dd> <dt>direction</dt> <dd><em>Optional.</em> The cursor's required direction. See <a title=\"en/IndexedDB/IDBCursor#Constants\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBCursor#Constants\">IDBCursor Constants</a> for possible values.</dd>\n</dl>\n</div><div id=\"section_24\"><span id=\"Returns_5\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\" rel=\"internal\">IDBRequest</a></code></dt>\n</dl>\n<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_25\"><span id=\"Exceptions_5\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>\n</table>\n</div>","name":"$dom_openKeyCursor","id":"$dom_openKeyCursor2()","children":[{"isOptional":true,"name":"key_OR_range","id":"key_OR_range","line":"652","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"direction","id":"direction","line":"652","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBIndex","line":"646","kind":"method"},{"isFinal":true,"name":"keyPath","id":"keyPath","line":"598","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"name":"multiEntry","id":"multiEntry","line":"602","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"name","id":"name","line":"606","kind":"variable"},{"ref":{"refId":"dart.dom.indexed_db/ObjectStore","name":"ObjectStore"},"isFinal":true,"name":"objectStore","id":"objectStore","line":"610","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"name":"unique","id":"unique","line":"614","kind":"variable"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBIndex","line":"500","kind":"class"},{"superclass":{"refId":"_interceptors/Interceptor","name":"Interceptor"},"mdnCommentHtml":"<p>The <code>IDBFactory</code> interface of the <a title=\"en/IndexedDB\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB\">IndexedDB&nbsp;API</a> lets applications asynchronously access the indexed databases. The object that implements the interface is&nbsp; <code>window.indexedDB</code>. You open—that is, create and access—and delete a database with the object and not directly with <code>IDBFactory</code>.</p>\n<p>This interface still has vendor prefixes, that is to say, you have to make calls with <code>mozIndexedDB.open()</code> for Firefox and <code>webkitIndexedDB.open()</code> for Chrome.</p>","name":"IdbFactory","id":"IdbFactory","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.dom.indexed_db/Database","name":"Database"}],"name":"Future"},"mdnCommentHtml":"<div class=\"warning\"><strong>Warning:</strong> The description documents the old specification. Some browsers still implement this method. The specifications have changed, but the changes have not yet been implemented by all browser. See the compatibility table for more information.</div>\n<p>Request opening a <a title=\"en/IndexedDB#gloss database connection\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_database_connection\">connection to a database</a>. The method returns &nbsp;an IDBRequest object&nbsp;immediately, and performs the opening operation asynchronously.&nbsp;</p>\n<p>The opening operation—which is performed in a separate thread—consists of the following steps:</p>\n<ol> <li>If a database named <code>myAwesomeDatabase</code> already exists: <ul> <li>Wait until any existing <code><a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\">VERSION_CHANGE</a></code> transactions have finished.</li> <li>If the database has a deletion pending, wait until it has been deleted.</li> </ul> </li> <li>If no database with that name exists, create a database with the provided name, with the empty string as its version, and no object stores.</li> <li>Create a connection to the database.</li>\n</ol>\n<p>If the operation is successful, an <a title=\"en/IndexedDB/IDBSuccessEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent\">IDBSuccessEvent</a> is fired on the request object that is returned from this method, with its <a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a> attribute set to the new <a title=\"en/IndexedDB/IDBDatabase\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabase\">IDBDatabase</a> object for the connection.</p>\n<p>If an error occurs while the database connection is being opened, then an <a title=\"en/IndexedDB/IDBErrorEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent\">error event</a> is fired on the request object returned from this method, with its <a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\"><code>code</code></a> and&nbsp; <code><a title=\"en/IndexedDB/IDBErrorEvent#attr message\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message\">message</a></code> set to appropriate values.</p>\n\n<div id=\"section_5\"><span id=\"Parameters\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>name</dt> <dd>The name of the database.</dd> <dt>version</dt> <dd>The version of the database.</dd>\n</dl>\n</div><div id=\"section_6\"><span id=\"Returns\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this request are fired. In the latest draft of the specification, which has not yet been implemented by browsers, the returned object is <code>IDBOpenRequest</code>.</dd>\n</dl>\n</div>","name":"open","id":"open4()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"377","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"version","id":"version","line":"378","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onUpgradeNeeded","id":"onUpgradeNeeded","children":[{"returnType":{"refId":"void","name":"void"},"uri":"sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"sdk/lib/indexed_db/dart2js/indexed_db_dart2js.dart","name":"VersionChangeEvent","id":"VersionChangeEvent","line":"378","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"378","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onBlocked","id":"onBlocked","children":[{"returnType":{"refId":"void","name":"void"},"uri":"sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"sdk/lib/indexed_db/dart2js/indexed_db_dart2js.dart","name":"Event","id":"Event","line":"379","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"379","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBFactory","line":"376","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.dom.indexed_db/IdbFactory","name":"IdbFactory"}],"name":"Future"},"mdnCommentHtml":"<p>Request deleting a database. The method returns&nbsp;&nbsp;an IDBRequest object&nbsp;immediately, and performs the deletion operation&nbsp;asynchronously.</p>\n<p>The deletion operation (performed in a different thread) consists of the following steps:</p>\n<ol> <li>If there is no database with the given name, exit successfully.</li> <li>Fire an <a title=\"en/IndexedDB/IDBVersionChangeEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeEvent\">IDBVersionChangeEvent</a> at all connection objects connected to the named database, with <code><a title=\"en/IndexedDB/IDBVersionChangeEvent#attr version\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeEvent#attr_version\">version</a></code> set to <code>null</code>.</li> <li>If any connection objects connected to the database are still open, fire a <code>blocked</code> event at the request object returned by the <code>deleteDatabase</code> method, using <a title=\"en/IndexedDB/IDBVersionChangeEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeEvent\">IDBVersionChangeEvent</a> with <code><a title=\"en/IndexedDB/IDBVersionChangeEvent#attr version\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeEvent#attr_version\">version</a></code> set to <code>null</code>.</li> <li>Wait until all open connections to the database are closed.</li> <li>Delete the database.</li>\n</ol>\n<p>If the database is successfully deleted, then an <a title=\"en/IndexedDB/IDBSuccessEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent\">IDBSuccessEvent</a> is fired on the request object returned from this method, with its <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to <code>null</code>.</p>\n<p>If an error occurs while the database is being deleted, then an error event is fired on the request object that is returned from this method, with its <code><a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\">code</a></code> and <code><a title=\"en/IndexedDB/IDBErrorEvent#attr message\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message\">message</a></code> set to appropriate values.</p>\n<p><strong>Tip:</strong> If the browser you are using hasn't implemented this yet, you can delete the object stores one by one, thus effectively removing the database.</p>\n\n<div id=\"section_8\"><span id=\"Parameters_2\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>name</dt> <dd>The name of the database.</dd>\n</dl>\n</div><div id=\"section_9\"><span id=\"Returns_2\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this request are fired. In the latest draft of the specification, which has not yet been implemented by browsers, the returned object is <code>IDBOpenRequest</code>.</dd>\n</dl>\n</div>","name":"deleteDatabase","id":"deleteDatabase2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"405","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onBlocked","id":"onBlocked","children":[{"returnType":{"refId":"void","name":"void"},"uri":"sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"sdk/lib/indexed_db/dart2js/indexed_db_dart2js.dart","name":"Event","id":"Event","line":"406","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"406","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBFactory","line":"404","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"}],"name":"Future"},"name":"getDatabaseNames","id":"getDatabaseNames0()","line":"426","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"mdnCommentHtml":"<p>Compares two values as keys to determine equality and ordering for IndexedDB operations, such as storing and iterating. Do not use this method for comparing arbitrary JavaScript values, because many JavaScript values are either not valid IndexedDB keys (booleans and objects, for example) or are treated as equivalent IndexedDB keys (for example, since IndexedDB ignores arrays with non-numeric properties and treats them as empty arrays, so any non-numeric array are treated as equivalent).</p>\n<p>This throws an exception if either of the values is not a valid key. &nbsp;</p>\n\n<div id=\"section_11\"><span id=\"Parameters_3\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>first</dt> <dd>The first key to compare.</dd> <dt>second</dt> <dd>The second key to compare.</dd>\n</dl>\n</div><div id=\"section_12\"><span id=\"Returns_3\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt>Integer</dt> <dd> <table class=\"standard-table\" width=\"434\"> <thead> <tr> <th scope=\"col\" width=\"216\">Returned value</th> <th scope=\"col\" width=\"206\">Description</th> </tr> </thead> <tbody> <tr> <td>-1</td> <td>1st key &lt; 2nd</td> </tr> <tr> <td>0</td> <td>1st key = 2nd</td> </tr> <tr> <td>1</td> <td>1st key &gt; 2nd</td> </tr> </tbody> </table> </dd>\n</dl>\n</div><div id=\"section_13\"><span id=\"Exceptions\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<br>\n<br>\n<br><table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NON_TRANSIENT_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NON_TRANSIENT_ERR\">NON_TRANSIENT_ERR</a></code></td> <td>One of the supplied keys was not a valid key.</td> </tr> </thead> <tbody> </tbody>\n</table>\n</div>","name":"cmp","id":"cmp2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"first","id":"first","line":"450","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"second","id":"second","line":"450","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBFactory","line":"448","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/OpenDBRequest","name":"OpenDBRequest"},"mdnCommentHtml":"<p>Request deleting a database. The method returns&nbsp;&nbsp;an IDBRequest object&nbsp;immediately, and performs the deletion operation&nbsp;asynchronously.</p>\n<p>The deletion operation (performed in a different thread) consists of the following steps:</p>\n<ol> <li>If there is no database with the given name, exit successfully.</li> <li>Fire an <a title=\"en/IndexedDB/IDBVersionChangeEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeEvent\">IDBVersionChangeEvent</a> at all connection objects connected to the named database, with <code><a title=\"en/IndexedDB/IDBVersionChangeEvent#attr version\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeEvent#attr_version\">version</a></code> set to <code>null</code>.</li> <li>If any connection objects connected to the database are still open, fire a <code>blocked</code> event at the request object returned by the <code>deleteDatabase</code> method, using <a title=\"en/IndexedDB/IDBVersionChangeEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeEvent\">IDBVersionChangeEvent</a> with <code><a title=\"en/IndexedDB/IDBVersionChangeEvent#attr version\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeEvent#attr_version\">version</a></code> set to <code>null</code>.</li> <li>Wait until all open connections to the database are closed.</li> <li>Delete the database.</li>\n</ol>\n<p>If the database is successfully deleted, then an <a title=\"en/IndexedDB/IDBSuccessEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent\">IDBSuccessEvent</a> is fired on the request object returned from this method, with its <code><a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a></code> set to <code>null</code>.</p>\n<p>If an error occurs while the database is being deleted, then an error event is fired on the request object that is returned from this method, with its <code><a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\">code</a></code> and <code><a title=\"en/IndexedDB/IDBErrorEvent#attr message\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message\">message</a></code> set to appropriate values.</p>\n<p><strong>Tip:</strong> If the browser you are using hasn't implemented this yet, you can delete the object stores one by one, thus effectively removing the database.</p>\n\n<div id=\"section_8\"><span id=\"Parameters_2\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>name</dt> <dd>The name of the database.</dd>\n</dl>\n</div><div id=\"section_9\"><span id=\"Returns_2\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this request are fired. In the latest draft of the specification, which has not yet been implemented by browsers, the returned object is <code>IDBOpenRequest</code>.</dd>\n</dl>\n</div>","name":"$dom_deleteDatabase","id":"$dom_deleteDatabase1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"455","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBFactory","line":"452","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/OpenDBRequest","name":"OpenDBRequest"},"mdnCommentHtml":"<div class=\"warning\"><strong>Warning:</strong> The description documents the old specification. Some browsers still implement this method. The specifications have changed, but the changes have not yet been implemented by all browser. See the compatibility table for more information.</div>\n<p>Request opening a <a title=\"en/IndexedDB#gloss database connection\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_database_connection\">connection to a database</a>. The method returns &nbsp;an IDBRequest object&nbsp;immediately, and performs the opening operation asynchronously.&nbsp;</p>\n<p>The opening operation—which is performed in a separate thread—consists of the following steps:</p>\n<ol> <li>If a database named <code>myAwesomeDatabase</code> already exists: <ul> <li>Wait until any existing <code><a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\">VERSION_CHANGE</a></code> transactions have finished.</li> <li>If the database has a deletion pending, wait until it has been deleted.</li> </ul> </li> <li>If no database with that name exists, create a database with the provided name, with the empty string as its version, and no object stores.</li> <li>Create a connection to the database.</li>\n</ol>\n<p>If the operation is successful, an <a title=\"en/IndexedDB/IDBSuccessEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent\">IDBSuccessEvent</a> is fired on the request object that is returned from this method, with its <a title=\"en/IndexedDB/IDBSuccessEvent#attr result\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result\">result</a> attribute set to the new <a title=\"en/IndexedDB/IDBDatabase\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabase\">IDBDatabase</a> object for the connection.</p>\n<p>If an error occurs while the database connection is being opened, then an <a title=\"en/IndexedDB/IDBErrorEvent\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent\">error event</a> is fired on the request object returned from this method, with its <a title=\"en/IndexedDB/IDBErrorEvent#attr code\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code\"><code>code</code></a> and&nbsp; <code><a title=\"en/IndexedDB/IDBErrorEvent#attr message\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message\">message</a></code> set to appropriate values.</p>\n\n<div id=\"section_5\"><span id=\"Parameters\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>name</dt> <dd>The name of the database.</dd> <dt>version</dt> <dd>The version of the database.</dd>\n</dl>\n</div><div id=\"section_6\"><span id=\"Returns\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this request are fired. In the latest draft of the specification, which has not yet been implemented by browsers, the returned object is <code>IDBOpenRequest</code>.</dd>\n</dl>\n</div>","name":"$dom_open","id":"$dom_open2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"463","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"version","id":"version","line":"463","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBFactory","line":"457","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"name":"$dom_webkitGetDatabaseNames","id":"$dom_webkitGetDatabaseNames0()","line":"465","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"\nChecks to see if Indexed DB is supported on the current platform.\n","name":"supported","id":"supported","line":"369","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nChecks to see if getDatabaseNames is supported by the current platform.\n","name":"supportsDatabaseNames","id":"supportsDatabaseNames","line":"442","kind":"property"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBFactory","line":"359","kind":"class"},{"superclass":{"refId":"dart.dom.html/EventTarget","name":"EventTarget"},"mdnCommentHtml":"<p>The <code>IDBDatabase</code> interface of the IndexedDB&nbsp;API provides asynchronous access to a <a title=\"en/IndexedDB#database connection\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#database_connection\">connection to a database</a>. Use it to create, manipulate, and delete objects in that database. The interface also provides the only way to get a <a title=\"en/IndexedDB#gloss transaction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_transaction\">transaction</a>&nbsp;and manage versions on that database.</p>\n<p>Inherits from: <a title=\"en/DOM/EventTarget\" rel=\"internal\" href=\"https://developer.mozilla.org/en/DOM/EventTarget\">EventTarget</a></p>","name":"Database","id":"Database","children":[{"returnType":{"refId":"dart.dom.indexed_db/ObjectStore","name":"ObjectStore"},"mdnCommentHtml":"<p>Creates and returns a new object store or index. The method takes the name of the store as well as a parameter object. The parameter object lets you define important optional properties. You can use the property to uniquely identify individual objects in the store. As the property is an identifier, it should be unique to every object, and every object should have that property.</p>\n<p>But before you can create any object store or index,&nbsp;you must first call the <code><a href=\"#setVersion()\">setVersion()</a></code><a href=\"#setVersion()\"> method</a>.</p>\n\n<div id=\"section_11\"><span id=\"Parameters\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>name</dt> <dd>The name of the new object store.</dd> <dt>optionalParameters</dt> <dd> <div class=\"warning\"><strong>Warning:</strong> The latest draft of the specification changed this to <code>IDBDatabaseOptionalParameters</code>, which is not yet recognized by any browser</div> <p><em>Optional</em>. Options object whose attributes are optional parameters to the method. It includes the following properties:</p> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code>keyPath</code></td> <td>The <a title=\"en/IndexedDB#gloss key path\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_key_path\">key path</a> to be used by the new object store. If empty or not specified, the object store is created without a key path and uses <a title=\"en/IndexedDB#gloss out-of-line key\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_out-of-line_key\">out-of-line keys</a>.</td> </tr> <tr> <td><code>autoIncrement</code></td> <td>If true, the object store has a <a title=\"en/IndexedDB#gloss key generator\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_key_generator\">key generator</a>. Defaults to <code>false</code>.</td> </tr> </tbody> </table> <p>Unknown parameters are ignored.</p> </dd>\n</dl>\n</div><div id=\"section_12\"><span id=\"Returns\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBObjectStore\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore\">IDBObjectStore</a></code></dt> <dd>The newly created object store.</dd>\n</dl>\n</div><div id=\"section_13\"><span id=\"Exceptions\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Exception</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title=\"en/IndexedDB/DatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The method was not called from a <code><a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\">VERSION_CHANGE</a></code> transaction callback. You must call <code>setVersion()</code> first.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/DatabaseException#CONSTRAINT ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#CONSTRAINT_ERR\">CONSTRAINT_ERR</a></code></td> <td>An object store with the given name (based on case-sensitive comparison) already exists in the connected database.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NON_TRANSIENT_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NON_TRANSIENT_ERR\">NON_TRANSIENT_ERR</a></code></td> <td><code>optionalParameters</code> has attributes other than <code>keyPath</code> and <code>autoIncrement</code>.</td> </tr> </tbody>\n</table>\n</div>","name":"createObjectStore","id":"createObjectStore3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"243","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"keyPath","id":"keyPath","line":"244","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"autoIncrement","id":"autoIncrement","line":"244","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBDatabase","line":"241","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Transaction","name":"Transaction"},"name":"transaction","id":"transaction2()","children":[{"name":"storeName_OR_storeNames","id":"storeName_OR_storeNames","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"mode","id":"mode","kind":"param"}],"line":"256","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Transaction","name":"Transaction"},"name":"_transaction","isPrivate":true,"id":"_transaction2()","children":[{"name":"stores","id":"stores","line":"271","kind":"param"},{"name":"mode","id":"mode","line":"271","kind":"param"}],"line":"270","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"$dom_addEventListener","id":"$dom_addEventListener3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","line":"305","kind":"param"},{"ref":{"refId":"dart.dom.html/EventListener","name":"EventListener"},"name":"listener","id":"listener","line":"305","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"useCapture","id":"useCapture","line":"305","kind":"param"}],"line":"302","kind":"method"},{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"<p>Returns immediately and closes the connection in a separate thread. The connection is not actually closed until all transactions created using this connection are complete. No new transactions can be created for this connection once this method is called. Methods that create transactions throw an exception if a closing operation is pending.</p>\n<pre>void close();\n</pre>","name":"close","id":"close0()","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBDatabase","line":"307","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/ObjectStore","name":"ObjectStore"},"mdnCommentHtml":"<p>Creates and returns a new object store or index. The method takes the name of the store as well as a parameter object. The parameter object lets you define important optional properties. You can use the property to uniquely identify individual objects in the store. As the property is an identifier, it should be unique to every object, and every object should have that property.</p>\n<p>But before you can create any object store or index,&nbsp;you must first call the <code><a href=\"#setVersion()\">setVersion()</a></code><a href=\"#setVersion()\"> method</a>.</p>\n\n<div id=\"section_11\"><span id=\"Parameters\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>name</dt> <dd>The name of the new object store.</dd> <dt>optionalParameters</dt> <dd> <div class=\"warning\"><strong>Warning:</strong> The latest draft of the specification changed this to <code>IDBDatabaseOptionalParameters</code>, which is not yet recognized by any browser</div> <p><em>Optional</em>. Options object whose attributes are optional parameters to the method. It includes the following properties:</p> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code>keyPath</code></td> <td>The <a title=\"en/IndexedDB#gloss key path\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_key_path\">key path</a> to be used by the new object store. If empty or not specified, the object store is created without a key path and uses <a title=\"en/IndexedDB#gloss out-of-line key\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_out-of-line_key\">out-of-line keys</a>.</td> </tr> <tr> <td><code>autoIncrement</code></td> <td>If true, the object store has a <a title=\"en/IndexedDB#gloss key generator\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_key_generator\">key generator</a>. Defaults to <code>false</code>.</td> </tr> </tbody> </table> <p>Unknown parameters are ignored.</p> </dd>\n</dl>\n</div><div id=\"section_12\"><span id=\"Returns\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBObjectStore\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBObjectStore\">IDBObjectStore</a></code></dt> <dd>The newly created object store.</dd>\n</dl>\n</div><div id=\"section_13\"><span id=\"Exceptions\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Exception</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title=\"en/IndexedDB/DatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The method was not called from a <code><a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\">VERSION_CHANGE</a></code> transaction callback. You must call <code>setVersion()</code> first.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/DatabaseException#CONSTRAINT ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#CONSTRAINT_ERR\">CONSTRAINT_ERR</a></code></td> <td>An object store with the given name (based on case-sensitive comparison) already exists in the connected database.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NON_TRANSIENT_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NON_TRANSIENT_ERR\">NON_TRANSIENT_ERR</a></code></td> <td><code>optionalParameters</code> has attributes other than <code>keyPath</code> and <code>autoIncrement</code>.</td> </tr> </tbody>\n</table>\n</div>","name":"$dom_createObjectStore","id":"$dom_createObjectStore2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"313","kind":"param"},{"ref":{"refId":"dart.core/Map","name":"Map"},"isOptional":true,"name":"options","id":"options","line":"313","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBDatabase","line":"311","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/ObjectStore","name":"ObjectStore"},"name":"_$dom_createObjectStore_1","isPrivate":true,"id":"_$dom_createObjectStore_12()","children":[{"name":"name","id":"name","line":"323","kind":"param"},{"name":"options","id":"options","line":"323","kind":"param"}],"line":"320","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/ObjectStore","name":"ObjectStore"},"name":"_$dom_createObjectStore_2","isPrivate":true,"id":"_$dom_createObjectStore_21()","children":[{"name":"name","id":"name","line":"327","kind":"param"}],"line":"324","kind":"method"},{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"<p>Destroys the object store with the given name in the connected database, along with any indexes that reference it.&nbsp;</p>\n<p>As with <code>createObjectStore()</code>, this method can be called <em>only</em> within a <code><a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\">VERSION_CHANGE</a></code> transaction. So you must call the <code>setVersion()</code> method first before you can remove any object store or index.</p>\n\n<div id=\"section_15\"><span id=\"Parameters_2\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>name</dt> <dd>The name of the data store to delete.</dd>\n</dl>\n</div><div id=\"section_16\"><span id=\"Returns_2\"></span><h5 class=\"editable\">Returns</h5>\n<p><code>void</code></p>\n</div><div id=\"section_17\"><span id=\"Exceptions_2\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Exception</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title=\"en/IndexedDB/DatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The method was not called from a <code><a title=\"en/IndexedDB/IDBTransaction#VERSION CHANGE\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE\">VERSION_CHANGE</a></code> transaction callback. You must call <code>setVersion()</code> first.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT FOUND ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR\">NOT_FOUND_ERR</a></code></td> <td>You are trying to delete an object store that does not exist. Names are case sensitive.</td> </tr> </tbody>\n</table>\n</div>","name":"deleteObjectStore","id":"deleteObjectStore1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"331","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBDatabase","line":"329","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"dispatchEvent","id":"dispatchEvent1()","children":[{"ref":{"refId":"dart.dom.html/Event","name":"Event"},"name":"evt","id":"evt","line":"335","kind":"param"}],"line":"333","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"$dom_removeEventListener","id":"$dom_removeEventListener3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","line":"340","kind":"param"},{"ref":{"refId":"dart.dom.html/EventListener","name":"EventListener"},"name":"listener","id":"listener","line":"340","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"useCapture","id":"useCapture","line":"340","kind":"param"}],"line":"337","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"Stream"},"name":"onAbort","id":"onAbort","line":"342","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"Stream"},"name":"onError","id":"onError","line":"346","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.dom.indexed_db/VersionChangeEvent","name":"VersionChangeEvent"}],"name":"Stream"},"name":"onVersionChange","id":"onVersionChange","line":"350","kind":"property"},{"ref":{"refId":"dart.dom.html/EventStreamProvider","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"EventStreamProvider"},"isStatic":true,"name":"abortEvent","id":"abortEvent","line":"276","kind":"variable"},{"ref":{"refId":"dart.dom.html/EventStreamProvider","arguments":[{"refId":"dart.dom.html/Event","name":"Event"}],"name":"EventStreamProvider"},"isStatic":true,"name":"errorEvent","id":"errorEvent","line":"280","kind":"variable"},{"ref":{"refId":"dart.dom.html/EventStreamProvider","arguments":[{"refId":"dart.dom.indexed_db/VersionChangeEvent","name":"VersionChangeEvent"}],"name":"EventStreamProvider"},"isStatic":true,"name":"versionChangeEvent","id":"versionChangeEvent","line":"284","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"mdnCommentHtml":"Name of the connected database.","name":"name","id":"name","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBDatabase","line":"288","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"isFinal":true,"mdnCommentHtml":"A list of the names of the <a title=\"en/IndexedDB#gloss object store\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB#gloss_object_store\">object stores</a> currently in the connected database.","name":"objectStoreNames","id":"objectStoreNames","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBDatabase","line":"294","kind":"variable"},{"isFinal":true,"mdnCommentHtml":"The version of the connected database. When a database is first created, this attribute is the empty string.","name":"version","id":"version","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBDatabase","line":"300","kind":"variable"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBDatabase","line":"233","kind":"class"},{"superclass":{"refId":"dart.dom.indexed_db/Cursor","name":"Cursor"},"name":"CursorWithValue","id":"CursorWithValue","children":[{"name":"value","id":"value","line":"220","kind":"property"},{"isFinal":true,"name":"_get_value","isPrivate":true,"id":"_get_value","line":"226","kind":"variable"}],"line":"215","kind":"class"},{"superclass":{"refId":"_interceptors/Interceptor","name":"Interceptor"},"mdnCommentHtml":"The <code>IDBCursor</code> interface of the <a title=\"en/IndexedDB\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB\">IndexedDB API</a> represents a <a title=\"en/IndexedDB#gloss_cursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/Basic_Concepts_Behind_IndexedDB#gloss_cursor\">cursor</a> for traversing or iterating over multiple records in a database.","name":"Cursor","id":"Cursor","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"mdnCommentHtml":"<p>Returns an <code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code> object, and, in a separate thread, deletes the record at the cursor's position, without changing the cursor's position. Once the record is deleted, the cursor's <code>value</code> is set to <code>null</code>.</p>\n<pre>IDBRequest delete (\n) raises (IDBDatabaseException);</pre>\n<div id=\"section_21\"><span id=\"Returns_4\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired. The <code>result</code> attribute is set to <code>undefined</code>.</dd>\n</dl>\n</div><div id=\"section_22\"><span id=\"Exceptions_4\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Exception</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The cursor was created using <a title=\"en/IndexedDB/IDBIndex#openKeyCursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBIndex#openKeyCursor\">openKeyCursor()</a>, or if it is currently being iterated (you cannot call this method again until the new cursor data has been loaded), or if it has iterated past the end of its range.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#READ ONLY ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#READ_ONLY_ERR\">READ_ONLY_ERR</a></code></td> <td>The cursor is in a transaction whose mode is <code><a title=\"en/IndexedDB/IDBTransaction#READ ONLY\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#READ_ONLY\">READ_ONLY</a></code>.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\">TRANSACTION_INACTIVE_ERR</a></code></td> <td>The transaction that this cursor belongs to is inactive.</td> </tr> </tbody>\n</table>\n</div>","name":"delete","id":"delete0()","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBCursor","line":"143","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"name":"update","id":"update1()","children":[{"name":"value","id":"value","line":"153","kind":"param"}],"line":"152","kind":"method"},{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"<p>Sets the number times a cursor should move its position forward.</p>\n<pre>IDBRequest advance (\n  in long <em>count</em>\n) raises (IDBDatabaseException);</pre>\n<div id=\"section_13\"><span id=\"Parameter_2\"></span><h5 class=\"editable\">Parameter</h5>\n<dl> <dt>count</dt> <dd>The number of advances forward the cursor should make.</dd>\n</dl>\n</div><div id=\"section_14\"><span id=\"Returns_2\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code>void</code></dt>\n</dl>\n</div><div id=\"section_15\"><span id=\"Exceptions_2\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Exception</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><a title=\"en/IndexedDB/IDBDatabaseException#NON_TRANSIET_ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NON_TRANSIET_ERR\"><code>NON_TRANSIENT_ERR</code></a></td> <td> <p>The value passed into the <code>count</code> parameter was zero or a negative number.</p> </td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The cursor was created using <a title=\"en/IndexedDB/IDBIndex#openKeyCursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBIndex#openKeyCursor\">openKeyCursor()</a>, or if it is currently being iterated (you cannot call this method again until the new cursor data has been loaded), or if it has iterated past the end of its range.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\">TRANSACTION_INACTIVE_ERR</a></code></td> <td>The transaction that this cursor belongs to is inactive.</td> </tr> </tbody>\n</table>\n</div>","name":"advance","id":"advance1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","line":"186","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBCursor","line":"184","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Returns an <code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code> object, and, in a separate thread, deletes the record at the cursor's position, without changing the cursor's position. Once the record is deleted, the cursor's <code>value</code> is set to <code>null</code>.</p>\n<pre>IDBRequest delete (\n) raises (IDBDatabaseException);</pre>\n<div id=\"section_21\"><span id=\"Returns_4\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired. The <code>result</code> attribute is set to <code>undefined</code>.</dd>\n</dl>\n</div><div id=\"section_22\"><span id=\"Exceptions_4\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following code:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Exception</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The cursor was created using <a title=\"en/IndexedDB/IDBIndex#openKeyCursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBIndex#openKeyCursor\">openKeyCursor()</a>, or if it is currently being iterated (you cannot call this method again until the new cursor data has been loaded), or if it has iterated past the end of its range.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#READ ONLY ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#READ_ONLY_ERR\">READ_ONLY_ERR</a></code></td> <td>The cursor is in a transaction whose mode is <code><a title=\"en/IndexedDB/IDBTransaction#READ ONLY\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#READ_ONLY\">READ_ONLY</a></code>.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\">TRANSACTION_INACTIVE_ERR</a></code></td> <td>The transaction that this cursor belongs to is inactive.</td> </tr> </tbody>\n</table>\n</div>","name":"$dom_delete","id":"$dom_delete0()","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBCursor","line":"188","kind":"method"},{"returnType":{"refId":"void","name":"void"},"mdnCommentHtml":"<p>Advances the cursor to the next position along its direction, to the item whose key matches the optional <code>key</code> parameter. If no key is specified, advance to the immediate next position, based on the cursor's direction.</p>\n<pre>void continue (\n  in optional any <em>key</em>\n) raises (IDBDatabaseException);</pre>\n<div id=\"section_17\"><span id=\"Returns_3\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code>void</code></dt>\n</dl>\n</div><div id=\"section_18\"><span id=\"Parameters\"></span><h5 class=\"editable\">Parameters</h5>\n<dl> <dt>key</dt> <dd>The key to position the cursor at.</dd>\n</dl>\n</div><div id=\"section_19\"><span id=\"Exceptions_3\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a>, with the following codes:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Exception</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></td> <td>If the <code>key</code> parameter was specified, but did not contain a valid key.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The cursor was created using <a title=\"en/IndexedDB/IDBIndex#openKeyCursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBIndex#openKeyCursor\">openKeyCursor()</a>, or if it is currently being iterated (you cannot call this method again until the new cursor data has been loaded), or if it has iterated past the end of its range.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\">TRANSACTION_INACTIVE_ERR</a></code></td> <td>The transaction that this cursor belongs to is inactive.</td> </tr> </tbody>\n</table>\n</div>","name":"next","id":"next1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"isOptional":true,"name":"key","id":"key","line":"196","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBCursor","line":"193","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"mdnCommentHtml":"<p>Returns an IDBRequest object, and, in a separate thread, updates the value at the current position of the cursor in the object store. If the cursor points to a record that has just been deleted, a new record is created.</p>\n<pre>IDBRequest update (\n  in any <em>value</em>\n) raises (IDBDatabaseException, DOMException);\n</pre>\n<div id=\"section_9\"><span id=\"Parameter\"></span><h5 class=\"editable\">Parameter</h5>\n<dl> <dt>value</dt> <dd>The value to be stored.</dd>\n</dl>\n</div><div id=\"section_10\"><span id=\"Returns\"></span><h5 class=\"editable\">Returns</h5>\n<dl> <dt><code><a title=\"en/IndexedDB/IDBRequest\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBRequest\">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>\n</dl>\n</div><div id=\"section_11\"><span id=\"Exceptions\"></span><h5 class=\"editable\">Exceptions</h5>\n<p>This method can raise an <a title=\"en/IndexedDB/IDBDatabaseException\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException\">IDBDatabaseException</a> with the following codes:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Exception</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#DATA ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR\">DATA_ERR</a></code></td> <td> <p>The underlying object store uses <a title=\"en/IndexedDB/Basic_Concepts_Behind_IndexedDB#gloss in-line keys\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/Basic_Concepts_Behind_IndexedDB#gloss_in-line_keys\">in-line keys</a>, and the key for the cursor's position does not match the <code>value</code> property at the object store's&nbsp;<a class=\"external\" title=\"object store key path\" rel=\"external\" href=\"http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#dfn-object-store-key-path\" target=\"_blank\">key path</a>.</p> </td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#NOT ALLOWED ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR\">NOT_ALLOWED_ERR</a></code></td> <td>The cursor was created using <a title=\"en/IndexedDB/IDBIndex#openKeyCursor\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBIndex#openKeyCursor\">openKeyCursor()</a>, or if it is currently being iterated (you cannot call this method again until the new cursor data has been loaded), or if it has iterated past the end of its range.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#READ ONLY ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#READ_ONLY_ERR\">READ_ONLY_ERR</a></code></td> <td>The cursor is in a transaction whose mode is <code><a title=\"en/IndexedDB/IDBTransaction#READ ONLY\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBTransaction#READ_ONLY\">READ_ONLY</a></code>.</td> </tr> <tr> <td><code><a title=\"en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR\">TRANSACTION_INACTIVE_ERR</a></code></td> <td>The transaction that this cursor belongs to is inactive.</td> </tr> </tbody>\n</table>\n<p>It can also raise a <a title=\"En/DOM/DOMException\" rel=\"internal\" href=\"https://developer.mozilla.org/En/DOM/DOMException\">DOMException</a> with the following code:</p>\n<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\" width=\"131\">Attribute</th> <th scope=\"col\" width=\"698\">Description</th> </tr> </thead> <tbody> <tr> <td><code>DATA_CLONE_ERR</code></td> <td>If the value could not be cloned.</td> </tr> </tbody>\n</table>\n</div>","name":"$dom_update","id":"$dom_update1()","children":[{"name":"value","id":"value","line":"200","kind":"param"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBCursor","line":"198","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/Request","name":"Request"},"name":"_$dom_update_1","isPrivate":true,"id":"_$dom_update_11()","children":[{"name":"value","id":"value","line":"207","kind":"param"}],"line":"204","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"mdnCommentHtml":"On getting, returns the <a title=\"en/IndexedDB/Basic_Concepts_Behind_IndexedDB#gloss direction\" rel=\"internal\" href=\"https://developer.mozilla.org/en/IndexedDB/Basic_Concepts_Behind_IndexedDB#gloss_direction\">direction</a> of traversal of the cursor. See Constants for possible values.","name":"direction","id":"direction","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBCursor","line":"164","kind":"variable"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isFinal":true,"mdnCommentHtml":"Returns the key for the record at the cursor's position. If the cursor is outside its range, this is <code>undefined</code>.","name":"key","id":"key","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBCursor","line":"170","kind":"variable"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isFinal":true,"mdnCommentHtml":"Returns the cursor's current effective key. If the cursor is currently being iterated or has iterated outside its range, this is <code>undefined</code>.","name":"primaryKey","id":"primaryKey","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBCursor","line":"176","kind":"variable"},{"isFinal":true,"mdnCommentHtml":"On getting, returns the <code>IDBObjectStore</code> or <code>IDBIndex</code> that the cursor is iterating. This function never returns null or throws an exception, even if the cursor is currently being iterated, has iterated past its end, or its transaction is not active.","name":"source","id":"source","mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBCursor","line":"182","kind":"variable"}],"mdnUrl":"https://developer.mozilla.org/en/IndexedDB/IDBCursor","line":"140","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"name":"_KeyRangeFactoryProvider","isPrivate":true,"id":"_KeyRangeFactoryProvider","children":[{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"name":"createKeyRange_only","id":"createKeyRange_only1()","children":[{"name":"value","id":"value","kind":"param"}],"line":"23","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"name":"createKeyRange_lowerBound","id":"createKeyRange_lowerBound2()","children":[{"name":"bound","id":"bound","line":"27","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"open","id":"open","line":"27","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"name":"createKeyRange_upperBound","id":"createKeyRange_upperBound2()","children":[{"name":"bound","id":"bound","line":"31","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"open","id":"open","line":"31","kind":"param"}],"line":"30","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"name":"createKeyRange_bound","id":"createKeyRange_bound4()","children":[{"name":"lower","id":"lower","kind":"param"},{"name":"upper","id":"upper","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"lowerOpen","id":"lowerOpen","line":"35","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"upperOpen","id":"upperOpen","line":"35","kind":"param"}],"line":"34","kind":"method"},{"isStatic":true,"name":"_class","isPrivate":true,"id":"_class0()","line":"41","kind":"method"},{"isStatic":true,"name":"_uncachedClass","isPrivate":true,"id":"_uncachedClass0()","line":"46","kind":"method"},{"isStatic":true,"name":"_translateKey","isPrivate":true,"id":"_translateKey1()","children":[{"name":"idbkey","id":"idbkey","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"name":"_only","isPrivate":true,"id":"_only2()","children":[{"name":"cls","id":"cls","kind":"param"},{"name":"value","id":"value","kind":"param"}],"line":"53","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"name":"_lowerBound","isPrivate":true,"id":"_lowerBound3()","children":[{"name":"cls","id":"cls","kind":"param"},{"name":"bound","id":"bound","kind":"param"},{"name":"open","id":"open","kind":"param"}],"line":"56","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"name":"_upperBound","isPrivate":true,"id":"_upperBound3()","children":[{"name":"cls","id":"cls","kind":"param"},{"name":"bound","id":"bound","kind":"param"},{"name":"open","id":"open","kind":"param"}],"line":"59","kind":"method"},{"returnType":{"refId":"dart.dom.indexed_db/KeyRange","name":"KeyRange"},"isStatic":true,"name":"_bound","isPrivate":true,"id":"_bound5()","children":[{"name":"cls","id":"cls","kind":"param"},{"name":"lower","id":"lower","kind":"param"},{"name":"upper","id":"upper","kind":"param"},{"name":"lowerOpen","id":"lowerOpen","kind":"param"},{"name":"upperOpen","id":"upperOpen","kind":"param"}],"line":"62","kind":"method"},{"isStatic":true,"name":"_cachedClass","isPrivate":true,"id":"_cachedClass","line":"39","kind":"variable"}],"line":"21","kind":"class"}],"line":"1","kind":"library"}